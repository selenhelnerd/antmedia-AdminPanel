{
	"info": {
		"_postman_id": "a714e14e-ea2b-424f-9056-4476aac8b353",
		"name": "Ant Media Server REST API Reference",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "43530309",
		"_collection_link": "https://www.postman.com/aerospace-operator-85344469/antmedia-server/collection/rhvov91/ant-media-server-rest-api-reference?action=share&source=collection_link&creator=43530309"
	},
	"item": [
		{
			"name": "cluster",
			"item": [
				{
					"name": "deleteNode",
					"item": [
						{
							"name": "{id}",
							"item": [
								{
									"name": "delete Node",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cluster/deleteNode/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"deleteNode",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/cluster/deleteNode/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														"deleteNode",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "node-count",
					"item": [
						{
							"name": "get Node Count",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "*/*"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/cluster/node-count",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"cluster",
										"node-count"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/cluster/node-count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"cluster",
												"node-count"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "*/*"
										}
									],
									"cookie": [],
									"body": "{\n  \"number\": \"<long>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "nodes",
					"item": [
						{
							"name": "{offset}",
							"item": [
								{
									"name": "{size}",
									"item": [
										{
											"name": "get Node List",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/cluster/nodes/:offset/:size",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"cluster",
														"nodes",
														":offset",
														":size"
													],
													"variable": [
														{
															"key": "offset",
															"value": ""
														},
														{
															"key": "size",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/cluster/nodes/:offset/:size",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"cluster",
																"nodes",
																":offset",
																":size"
															],
															"variable": [
																{
																	"key": "offset"
																},
																{
																	"key": "size"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"id\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"lastUpdateTime\": \"<long>\",\n    \"memory\": \"<string>\",\n    \"cpu\": \"<string>\",\n    \"status\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"lastUpdateTime\": \"<long>\",\n    \"memory\": \"<string>\",\n    \"cpu\": \"<string>\",\n    \"status\": \"<string>\"\n  }\n]"
												}
											]
										}
									]
								}
							]
						}
					]
				}
			]
		},
		{
			"name": "v2",
			"item": [
				{
					"name": "admin-status",
					"item": [
						{
							"name": "Returns whether current user is admin or not. If user is admin, it can call POST/PUT/DELETE methods",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/admin-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"admin-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/admin-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"admin-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "applications",
					"item": [
						{
							"name": "live-streams",
							"item": [
								{
									"name": "{appname}",
									"item": [
										{
											"name": "Returns live streams in the specified application. Retrieves broadcast names and the consumer size.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/applications/live-streams/:appname",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"applications",
														"live-streams",
														":appname"
													],
													"variable": [
														{
															"key": "appname",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/applications/live-streams/:appname",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"applications",
																"live-streams",
																":appname"
															],
															"variable": [
																{
																	"key": "appname"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "settings",
							"item": [
								{
									"name": "{appname}",
									"item": [
										{
											"name": "Returns the specified application settings",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/applications/settings/:appname",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"applications",
														"settings",
														":appname"
													],
													"variable": [
														{
															"key": "appname",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/applications/settings/:appname",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"applications",
																"settings",
																":appname"
															],
															"variable": [
																{
																	"key": "appname"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Changes the application settings with the given settings. Null fields will be set to default values.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"remoteAllowedCIDR\": \"<string>\",\n  \"mp4MuxingEnabled\": \"<boolean>\",\n  \"webMMuxingEnabled\": \"<boolean>\",\n  \"addDateTimeToMp4FileName\": \"<boolean>\",\n  \"fileNameFormat\": \"<string>\",\n  \"hlsMuxingEnabled\": \"<boolean>\",\n  \"encoderSettingsString\": \"<string>\",\n  \"signalingEnabled\": \"<boolean>\",\n  \"signalingAddress\": \"<string>\",\n  \"hlsListSize\": \"<string>\",\n  \"hlsTime\": \"<string>\",\n  \"uploadExtensionsToS3\": \"<integer>\",\n  \"s3StorageClass\": \"<string>\",\n  \"endpointHealthCheckPeriodMs\": \"<integer>\",\n  \"endpointRepublishLimit\": \"<integer>\",\n  \"dashSegDuration\": \"<string>\",\n  \"dashFragmentDuration\": \"<string>\",\n  \"targetLatency\": \"<string>\",\n  \"dashWindowSize\": \"<string>\",\n  \"dashExtraWindowSize\": \"<string>\",\n  \"islLDashEnabled\": \"<boolean>\",\n  \"islLHLSEnabled\": \"<boolean>\",\n  \"hlsEnabledViaDash\": \"<boolean>\",\n  \"useTimelineDashMuxing\": \"<boolean>\",\n  \"webRTCEnabled\": \"<boolean>\",\n  \"useOriginalWebRTCEnabled\": \"<boolean>\",\n  \"deleteHLSFilesOnEnded\": \"<boolean>\",\n  \"deleteDASHFilesOnEnded\": \"<boolean>\",\n  \"tokenHashSecret\": \"<string>\",\n  \"hashControlPublishEnabled\": \"<boolean>\",\n  \"hashControlPlayEnabled\": \"<boolean>\",\n  \"listenerHookURL\": \"<string>\",\n  \"acceptOnlyStreamsInDataStore\": \"<boolean>\",\n  \"acceptOnlyRoomsInDataStore\": \"<boolean>\",\n  \"publishTokenControlEnabled\": \"<boolean>\",\n  \"playTokenControlEnabled\": \"<boolean>\",\n  \"timeTokenSubscriberOnly\": \"<boolean>\",\n  \"enableTimeTokenForPlay\": \"<boolean>\",\n  \"enableTimeTokenForPublish\": \"<boolean>\",\n  \"timeTokenPeriod\": \"<integer>\",\n  \"hlsPlayListType\": \"<string>\",\n  \"vodFolder\": \"<string>\",\n  \"previewOverwrite\": \"<boolean>\",\n  \"stalkerDBServer\": \"<string>\",\n  \"stalkerDBUsername\": \"<string>\",\n  \"stalkerDBPassword\": \"<string>\",\n  \"objectDetectionEnabled\": \"<boolean>\",\n  \"createPreviewPeriod\": \"<integer>\",\n  \"restartStreamFetcherPeriod\": \"<integer>\",\n  \"startStreamFetcherAutomatically\": \"<boolean>\",\n  \"streamFetcherBufferTime\": \"<integer>\",\n  \"hlsflags\": \"<string>\",\n  \"mySqlClientPath\": \"<string>\",\n  \"muxerFinishScript\": \"<string>\",\n  \"webRTCFrameRate\": \"<integer>\",\n  \"webRTCPortRangeMin\": \"<integer>\",\n  \"webRTCPortRangeMax\": \"<integer>\",\n  \"stunServerURI\": \"<string>\",\n  \"turnServerUsername\": \"<string>\",\n  \"turnServerCredential\": \"<string>\",\n  \"webRTCTcpCandidatesEnabled\": \"<boolean>\",\n  \"webRTCSdpSemantics\": \"<string>\",\n  \"portAllocatorFlags\": \"<integer>\",\n  \"encoderName\": \"<string>\",\n  \"encoderPreset\": \"<string>\",\n  \"encoderProfile\": \"<string>\",\n  \"encoderLevel\": \"<string>\",\n  \"encoderRc\": \"<string>\",\n  \"encoderSpecific\": \"<string>\",\n  \"encoderThreadCount\": \"<integer>\",\n  \"encoderThreadType\": \"<integer>\",\n  \"vp8EncoderSpeed\": \"<integer>\",\n  \"vp8EncoderDeadline\": \"<string>\",\n  \"vp8EncoderThreadCount\": \"<integer>\",\n  \"previewHeight\": \"<integer>\",\n  \"generatePreview\": \"<boolean>\",\n  \"writeStatsToDatastore\": \"<boolean>\",\n  \"encoderSelectionPreference\": \"<string>\",\n  \"allowedPublisherCIDR\": \"<string>\",\n  \"excessiveBandwidthValue\": \"<integer>\",\n  \"excessiveBandwidthCallThreshold\": \"<integer>\",\n  \"excessiveBandwithTryCountBeforeSwitchback\": \"<integer>\",\n  \"excessiveBandwidthAlgorithmEnabled\": \"<boolean>\",\n  \"packetLossDiffThresholdForSwitchback\": \"<integer>\",\n  \"rttMeasurementDiffThresholdForSwitchback\": \"<integer>\",\n  \"replaceCandidateAddrWithServerAddr\": \"<boolean>\",\n  \"appName\": \"<string>\",\n  \"encodingTimeout\": \"<integer>\",\n  \"webRTCClientStartTimeoutMs\": \"<integer>\",\n  \"defaultDecodersEnabled\": \"<boolean>\",\n  \"updateTime\": \"<long>\",\n  \"httpForwardingExtension\": \"<string>\",\n  \"httpForwardingBaseURL\": \"<string>\",\n  \"maxAnalyzeDurationMS\": \"<integer>\",\n  \"disableIPv6Candidates\": \"<boolean>\",\n  \"rtspPullTransportType\": \"<string>\",\n  \"rtspTimeoutDurationMs\": \"<integer>\",\n  \"maxFpsAccept\": \"<integer>\",\n  \"maxResolutionAccept\": \"<integer>\",\n  \"h264Enabled\": \"<boolean>\",\n  \"vp8Enabled\": \"<boolean>\",\n  \"h265Enabled\": \"<boolean>\",\n  \"dataChannelEnabled\": \"<boolean>\",\n  \"dataChannelPlayerDistribution\": \"<string>\",\n  \"rtmpIngestBufferTimeMs\": \"<long>\",\n  \"dataChannelWebHookURL\": \"<string>\",\n  \"h265EncoderPreset\": \"<string>\",\n  \"h265EncoderProfile\": \"<string>\",\n  \"h265EncoderRc\": \"<string>\",\n  \"h265EncoderSpecific\": \"<string>\",\n  \"h265EncoderLevel\": \"<string>\",\n  \"heightRtmpForwarding\": \"<integer>\",\n  \"audioBitrateSFU\": \"<integer>\",\n  \"dashMuxingEnabled\": \"<boolean>\",\n  \"aacEncodingEnabled\": \"<boolean>\",\n  \"gopSize\": \"<integer>\",\n  \"constantRateFactor\": \"<string>\",\n  \"webRTCViewerLimit\": \"<integer>\",\n  \"toBeDeleted\": \"<boolean>\",\n  \"pullWarFile\": \"<boolean>\",\n  \"warFileOriginServerAddress\": \"<string>\",\n  \"jwtSecretKey\": \"<string>\",\n  \"jwtControlEnabled\": \"<boolean>\",\n  \"ipFilterEnabled\": \"<boolean>\",\n  \"ingestingStreamLimit\": \"<integer>\",\n  \"webRTCKeyframeTime\": \"<integer>\",\n  \"jwtStreamSecretKey\": \"<string>\",\n  \"publishJwtControlEnabled\": \"<boolean>\",\n  \"playJwtControlEnabled\": \"<boolean>\",\n  \"dashHttpStreaming\": \"<boolean>\",\n  \"s3StreamsFolderPath\": \"<string>\",\n  \"s3PreviewsFolderPath\": \"<string>\",\n  \"dashHttpEndpoint\": \"<string>\",\n  \"hlsHttpEndpoint\": \"<string>\",\n  \"forceDecoding\": \"<boolean>\",\n  \"addOriginalMuxerIntoHLSPlaylist\": \"<boolean>\",\n  \"s3RecordingEnabled\": \"<boolean>\",\n  \"s3AccessKey\": \"<string>\",\n  \"s3SecretKey\": \"<string>\",\n  \"s3BucketName\": \"<string>\",\n  \"s3RegionName\": \"<string>\",\n  \"s3Endpoint\": \"<string>\",\n  \"s3CacheControl\": \"<string>\",\n  \"s3Permission\": \"<string>\",\n  \"hlsEncryptionKeyInfoFile\": \"<string>\",\n  \"jwksURL\": \"<string>\",\n  \"forceAspectRatioInTranscoding\": \"<boolean>\",\n  \"webhookAuthenticateURL\": \"<string>\",\n  \"maxAudioTrackCount\": \"<integer>\",\n  \"maxVideoTrackCount\": \"<integer>\",\n  \"vodUploadFinishScript\": \"<string>\",\n  \"contentSecurityPolicyHeaderValue\": \"<string>\",\n  \"rtmpPlaybackEnabled\": \"<boolean>\",\n  \"originEdgeIdleTimeout\": \"<integer>\",\n  \"addDateTimeToHlsFileName\": \"<boolean>\",\n  \"playWebRTCStreamOnceForEachSession\": \"<boolean>\",\n  \"statsBasedABREnabled\": \"<boolean>\",\n  \"abrDownScalePacketLostRatio\": \"<float>\",\n  \"abrUpScalePacketLostRatio\": \"<float>\",\n  \"abrUpScaleRTTMs\": \"<integer>\",\n  \"abrUpScaleJitterMs\": \"<integer>\",\n  \"clusterCommunicationKey\": \"<string>\",\n  \"encoderSettings\": [\n    {\n      \"height\": \"<integer>\",\n      \"videoBitrate\": \"<integer>\",\n      \"audioBitrate\": \"<integer>\",\n      \"forceEncode\": \"<boolean>\"\n    },\n    {\n      \"height\": \"<integer>\",\n      \"videoBitrate\": \"<integer>\",\n      \"audioBitrate\": \"<integer>\",\n      \"forceEncode\": \"<boolean>\"\n    }\n  ]\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/applications/settings/:appname",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"applications",
														"settings",
														":appname"
													],
													"variable": [
														{
															"key": "appname",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"remoteAllowedCIDR\": \"<string>\",\n  \"mp4MuxingEnabled\": \"<boolean>\",\n  \"webMMuxingEnabled\": \"<boolean>\",\n  \"addDateTimeToMp4FileName\": \"<boolean>\",\n  \"fileNameFormat\": \"<string>\",\n  \"hlsMuxingEnabled\": \"<boolean>\",\n  \"encoderSettingsString\": \"<string>\",\n  \"signalingEnabled\": \"<boolean>\",\n  \"signalingAddress\": \"<string>\",\n  \"hlsListSize\": \"<string>\",\n  \"hlsTime\": \"<string>\",\n  \"uploadExtensionsToS3\": \"<integer>\",\n  \"s3StorageClass\": \"<string>\",\n  \"endpointHealthCheckPeriodMs\": \"<integer>\",\n  \"endpointRepublishLimit\": \"<integer>\",\n  \"dashSegDuration\": \"<string>\",\n  \"dashFragmentDuration\": \"<string>\",\n  \"targetLatency\": \"<string>\",\n  \"dashWindowSize\": \"<string>\",\n  \"dashExtraWindowSize\": \"<string>\",\n  \"islLDashEnabled\": \"<boolean>\",\n  \"islLHLSEnabled\": \"<boolean>\",\n  \"hlsEnabledViaDash\": \"<boolean>\",\n  \"useTimelineDashMuxing\": \"<boolean>\",\n  \"webRTCEnabled\": \"<boolean>\",\n  \"useOriginalWebRTCEnabled\": \"<boolean>\",\n  \"deleteHLSFilesOnEnded\": \"<boolean>\",\n  \"deleteDASHFilesOnEnded\": \"<boolean>\",\n  \"tokenHashSecret\": \"<string>\",\n  \"hashControlPublishEnabled\": \"<boolean>\",\n  \"hashControlPlayEnabled\": \"<boolean>\",\n  \"listenerHookURL\": \"<string>\",\n  \"acceptOnlyStreamsInDataStore\": \"<boolean>\",\n  \"acceptOnlyRoomsInDataStore\": \"<boolean>\",\n  \"publishTokenControlEnabled\": \"<boolean>\",\n  \"playTokenControlEnabled\": \"<boolean>\",\n  \"timeTokenSubscriberOnly\": \"<boolean>\",\n  \"enableTimeTokenForPlay\": \"<boolean>\",\n  \"enableTimeTokenForPublish\": \"<boolean>\",\n  \"timeTokenPeriod\": \"<integer>\",\n  \"hlsPlayListType\": \"<string>\",\n  \"vodFolder\": \"<string>\",\n  \"previewOverwrite\": \"<boolean>\",\n  \"stalkerDBServer\": \"<string>\",\n  \"stalkerDBUsername\": \"<string>\",\n  \"stalkerDBPassword\": \"<string>\",\n  \"objectDetectionEnabled\": \"<boolean>\",\n  \"createPreviewPeriod\": \"<integer>\",\n  \"restartStreamFetcherPeriod\": \"<integer>\",\n  \"startStreamFetcherAutomatically\": \"<boolean>\",\n  \"streamFetcherBufferTime\": \"<integer>\",\n  \"hlsflags\": \"<string>\",\n  \"mySqlClientPath\": \"<string>\",\n  \"muxerFinishScript\": \"<string>\",\n  \"webRTCFrameRate\": \"<integer>\",\n  \"webRTCPortRangeMin\": \"<integer>\",\n  \"webRTCPortRangeMax\": \"<integer>\",\n  \"stunServerURI\": \"<string>\",\n  \"turnServerUsername\": \"<string>\",\n  \"turnServerCredential\": \"<string>\",\n  \"webRTCTcpCandidatesEnabled\": \"<boolean>\",\n  \"webRTCSdpSemantics\": \"<string>\",\n  \"portAllocatorFlags\": \"<integer>\",\n  \"encoderName\": \"<string>\",\n  \"encoderPreset\": \"<string>\",\n  \"encoderProfile\": \"<string>\",\n  \"encoderLevel\": \"<string>\",\n  \"encoderRc\": \"<string>\",\n  \"encoderSpecific\": \"<string>\",\n  \"encoderThreadCount\": \"<integer>\",\n  \"encoderThreadType\": \"<integer>\",\n  \"vp8EncoderSpeed\": \"<integer>\",\n  \"vp8EncoderDeadline\": \"<string>\",\n  \"vp8EncoderThreadCount\": \"<integer>\",\n  \"previewHeight\": \"<integer>\",\n  \"generatePreview\": \"<boolean>\",\n  \"writeStatsToDatastore\": \"<boolean>\",\n  \"encoderSelectionPreference\": \"<string>\",\n  \"allowedPublisherCIDR\": \"<string>\",\n  \"excessiveBandwidthValue\": \"<integer>\",\n  \"excessiveBandwidthCallThreshold\": \"<integer>\",\n  \"excessiveBandwithTryCountBeforeSwitchback\": \"<integer>\",\n  \"excessiveBandwidthAlgorithmEnabled\": \"<boolean>\",\n  \"packetLossDiffThresholdForSwitchback\": \"<integer>\",\n  \"rttMeasurementDiffThresholdForSwitchback\": \"<integer>\",\n  \"replaceCandidateAddrWithServerAddr\": \"<boolean>\",\n  \"appName\": \"<string>\",\n  \"encodingTimeout\": \"<integer>\",\n  \"webRTCClientStartTimeoutMs\": \"<integer>\",\n  \"defaultDecodersEnabled\": \"<boolean>\",\n  \"updateTime\": \"<long>\",\n  \"httpForwardingExtension\": \"<string>\",\n  \"httpForwardingBaseURL\": \"<string>\",\n  \"maxAnalyzeDurationMS\": \"<integer>\",\n  \"disableIPv6Candidates\": \"<boolean>\",\n  \"rtspPullTransportType\": \"<string>\",\n  \"rtspTimeoutDurationMs\": \"<integer>\",\n  \"maxFpsAccept\": \"<integer>\",\n  \"maxResolutionAccept\": \"<integer>\",\n  \"h264Enabled\": \"<boolean>\",\n  \"vp8Enabled\": \"<boolean>\",\n  \"h265Enabled\": \"<boolean>\",\n  \"dataChannelEnabled\": \"<boolean>\",\n  \"dataChannelPlayerDistribution\": \"<string>\",\n  \"rtmpIngestBufferTimeMs\": \"<long>\",\n  \"dataChannelWebHookURL\": \"<string>\",\n  \"h265EncoderPreset\": \"<string>\",\n  \"h265EncoderProfile\": \"<string>\",\n  \"h265EncoderRc\": \"<string>\",\n  \"h265EncoderSpecific\": \"<string>\",\n  \"h265EncoderLevel\": \"<string>\",\n  \"heightRtmpForwarding\": \"<integer>\",\n  \"audioBitrateSFU\": \"<integer>\",\n  \"dashMuxingEnabled\": \"<boolean>\",\n  \"aacEncodingEnabled\": \"<boolean>\",\n  \"gopSize\": \"<integer>\",\n  \"constantRateFactor\": \"<string>\",\n  \"webRTCViewerLimit\": \"<integer>\",\n  \"toBeDeleted\": \"<boolean>\",\n  \"pullWarFile\": \"<boolean>\",\n  \"warFileOriginServerAddress\": \"<string>\",\n  \"jwtSecretKey\": \"<string>\",\n  \"jwtControlEnabled\": \"<boolean>\",\n  \"ipFilterEnabled\": \"<boolean>\",\n  \"ingestingStreamLimit\": \"<integer>\",\n  \"webRTCKeyframeTime\": \"<integer>\",\n  \"jwtStreamSecretKey\": \"<string>\",\n  \"publishJwtControlEnabled\": \"<boolean>\",\n  \"playJwtControlEnabled\": \"<boolean>\",\n  \"dashHttpStreaming\": \"<boolean>\",\n  \"s3StreamsFolderPath\": \"<string>\",\n  \"s3PreviewsFolderPath\": \"<string>\",\n  \"dashHttpEndpoint\": \"<string>\",\n  \"hlsHttpEndpoint\": \"<string>\",\n  \"forceDecoding\": \"<boolean>\",\n  \"addOriginalMuxerIntoHLSPlaylist\": \"<boolean>\",\n  \"s3RecordingEnabled\": \"<boolean>\",\n  \"s3AccessKey\": \"<string>\",\n  \"s3SecretKey\": \"<string>\",\n  \"s3BucketName\": \"<string>\",\n  \"s3RegionName\": \"<string>\",\n  \"s3Endpoint\": \"<string>\",\n  \"s3CacheControl\": \"<string>\",\n  \"s3Permission\": \"<string>\",\n  \"hlsEncryptionKeyInfoFile\": \"<string>\",\n  \"jwksURL\": \"<string>\",\n  \"forceAspectRatioInTranscoding\": \"<boolean>\",\n  \"webhookAuthenticateURL\": \"<string>\",\n  \"maxAudioTrackCount\": \"<integer>\",\n  \"maxVideoTrackCount\": \"<integer>\",\n  \"vodUploadFinishScript\": \"<string>\",\n  \"contentSecurityPolicyHeaderValue\": \"<string>\",\n  \"rtmpPlaybackEnabled\": \"<boolean>\",\n  \"originEdgeIdleTimeout\": \"<integer>\",\n  \"addDateTimeToHlsFileName\": \"<boolean>\",\n  \"playWebRTCStreamOnceForEachSession\": \"<boolean>\",\n  \"statsBasedABREnabled\": \"<boolean>\",\n  \"abrDownScalePacketLostRatio\": \"<float>\",\n  \"abrUpScalePacketLostRatio\": \"<float>\",\n  \"abrUpScaleRTTMs\": \"<integer>\",\n  \"abrUpScaleJitterMs\": \"<integer>\",\n  \"clusterCommunicationKey\": \"<string>\",\n  \"encoderSettings\": [\n    {\n      \"height\": \"<integer>\",\n      \"videoBitrate\": \"<integer>\",\n      \"audioBitrate\": \"<integer>\",\n      \"forceEncode\": \"<boolean>\"\n    },\n    {\n      \"height\": \"<integer>\",\n      \"videoBitrate\": \"<integer>\",\n      \"audioBitrate\": \"<integer>\",\n      \"forceEncode\": \"<boolean>\"\n    }\n  ]\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/applications/settings/:appname",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"applications",
																"settings",
																":appname"
															],
															"variable": [
																{
																	"key": "appname"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "{appName}",
							"item": [
								{
									"name": "Creates a new application with given name. It just creates default app",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/applications/:appName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"applications",
												":appName"
											],
											"variable": [
												{
													"key": "appName",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/applications/:appName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"applications",
														":appName"
													],
													"variable": [
														{
															"key": "appName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Creates a new application with given name. It supports uploading custom WAR files",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/v2/applications/:appName",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"applications",
												":appName"
											],
											"variable": [
												{
													"key": "appName",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/v2/applications/:appName",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"applications",
														":appName"
													],
													"variable": [
														{
															"key": "appName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Deletes application with the given name.",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/applications/:appName?deleteDB=<boolean>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"applications",
												":appName"
											],
											"query": [
												{
													"key": "deleteDB",
													"value": ""
												}
											],
											"variable": [
												{
													"key": "appName",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/applications/:appName?deleteDB=<boolean>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"applications",
														":appName"
													],
													"query": [
														{
															"key": "deleteDB",
															"value": ""
														}
													],
													"variable": [
														{
															"key": "appName"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{appname}",
							"item": [
								{
									"name": "reset",
									"item": [
										{
											"name": "Resets the viewer counts and broadcasts statuses in the db. This can be used after server crashes to recover db. It's not intended to use to ignore the crash.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/applications/:appname/reset",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"applications",
														":appname",
														"reset"
													],
													"variable": [
														{
															"key": "appname",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/applications/:appname/reset",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"applications",
																":appname",
																"reset"
															],
															"variable": [
																{
																	"key": "appname"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "Gets the applications in the server. Returns the name of the applications in JSON format.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/applications",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"applications"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/applications",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"applications"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "applications-info",
					"item": [
						{
							"name": "Gets application info. Application info includes live stream count, vod count and application name.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/applications-info",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"applications-info"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/applications-info",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"applications-info"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "authentication-status",
					"item": [
						{
							"name": "Returns true if user is authenticated to call rest api operations.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/authentication-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"authentication-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/authentication-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"authentication-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "broadcasts",
					"item": [
						{
							"name": "active-live-stream-count",
							"item": [
								{
									"name": "Return the active live streams",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/active-live-stream-count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"active-live-stream-count"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/active-live-stream-count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"active-live-stream-count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"number\": \"<long>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "bulk",
							"item": [
								{
									"name": "Delete multiple broadcasts from data store and stop if they are broadcasting",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"bulk"
											]
										}
									},
									"response": [
										{
											"name": "If it's deleted, success is true. If it's not deleted, success if false.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/bulk",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"bulk"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "conference-rooms",
							"item": [
								{
									"name": "list",
									"item": [
										{
											"name": "{offset}",
											"item": [
												{
													"name": "{size}",
													"item": [
														{
															"name": "Gets the conference room list from database",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/list/:offset/:size?sort_by=<string>&order_by=<string>&search=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"conference-rooms",
																		"list",
																		":offset",
																		":size"
																	],
																	"query": [
																		{
																			"key": "sort_by",
																			"value": "",
																			"description": "field to sort"
																		},
																		{
																			"key": "order_by",
																			"value": "",
																			"description": "asc for Ascending, desc Descending order"
																		},
																		{
																			"key": "search",
																			"value": "",
																			"description": "Search parameter, returns specific items that contains search string"
																		}
																	],
																	"variable": [
																		{
																			"key": "offset",
																			"value": ""
																		},
																		{
																			"key": "size",
																			"value": ""
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/list/:offset/:size?sort_by=<string>&order_by=<string>&search=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v2",
																				"broadcasts",
																				"conference-rooms",
																				"list",
																				":offset",
																				":size"
																			],
																			"query": [
																				{
																					"key": "sort_by",
																					"value": "",
																					"description": "field to sort"
																				},
																				{
																					"key": "order_by",
																					"value": "",
																					"description": "asc for Ascending, desc Descending order"
																				},
																				{
																					"key": "search",
																					"value": "",
																					"description": "Search parameter, returns specific items that contains search string"
																				}
																			],
																			"variable": [
																				{
																					"key": "offset"
																				},
																				{
																					"key": "size"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"roomId\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"roomStreamList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"mode\": \"<string>\",\n    \"originAdress\": \"<string>\"\n  },\n  {\n    \"roomId\": \"<string>\",\n    \"startDate\": \"<long>\",\n    \"endDate\": \"<long>\",\n    \"roomStreamList\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"mode\": \"<string>\",\n    \"originAdress\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "{roomId}",
									"item": [
										{
											"name": "Get conference room object",
											"request": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:roomId",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"conference-rooms",
														":roomId"
													],
													"variable": [
														{
															"key": "roomId",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Return the ConferenceRoom object",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:roomId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":roomId"
															],
															"variable": [
																{
																	"key": "roomId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												},
												{
													"name": "ConferenceRoom object not found",
													"originalRequest": {
														"method": "GET",
														"header": [],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:roomId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":roomId"
															],
															"variable": [
																{
																	"key": "roomId"
																}
															]
														}
													},
													"status": "Not Found",
													"code": 404,
													"_postman_previewlanguage": "text",
													"header": [],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "{room_id}",
									"item": [
										{
											"name": "add",
											"item": [
												{
													"name": "Adds the specified stream with streamId to the room.  Use PUT conference-rooms/{room_id}/{streamId}",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/add?streamId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":room_id",
																"add"
															],
															"query": [
																{
																	"key": "streamId",
																	"value": "",
																	"description": "(Required) Stream id to add to the conference room"
																}
															],
															"variable": [
																{
																	"key": "room_id",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/add?streamId=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"conference-rooms",
																		":room_id",
																		"add"
																	],
																	"query": [
																		{
																			"key": "streamId",
																			"value": "",
																			"description": "(Required) Stream id to add to the conference room"
																		}
																	],
																	"variable": [
																		{
																			"key": "room_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "delete",
											"item": [
												{
													"name": "Deletes the specified stream correlated with streamId in the room. Use DELETE /conference-rooms/{room_id}/{streamId}",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/delete?streamId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":room_id",
																"delete"
															],
															"query": [
																{
																	"key": "streamId",
																	"value": "",
																	"description": "(Required) Stream id to delete from the conference room"
																}
															],
															"variable": [
																{
																	"key": "room_id",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/delete?streamId=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"conference-rooms",
																		":room_id",
																		"delete"
																	],
																	"query": [
																		{
																			"key": "streamId",
																			"value": "",
																			"description": "(Required) Stream id to delete from the conference room"
																		}
																	],
																	"variable": [
																		{
																			"key": "room_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "room-info",
											"item": [
												{
													"name": "Returns the streams Ids in the room.",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/room-info?streamId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":room_id",
																"room-info"
															],
															"query": [
																{
																	"key": "streamId",
																	"value": "",
																	"description": "If Stream Id is entered, that stream id will be isolated from the result"
																}
															],
															"variable": [
																{
																	"key": "room_id",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/room-info?streamId=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"conference-rooms",
																		":room_id",
																		"room-info"
																	],
																	"query": [
																		{
																			"key": "streamId",
																			"value": "",
																			"description": "If Stream Id is entered, that stream id will be isolated from the result"
																		}
																	],
																	"variable": [
																		{
																			"key": "room_id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  \"<string>\",\n  \"<string>\"\n]"
														}
													]
												}
											]
										},
										{
											"name": "{streamId}",
											"item": [
												{
													"name": "Adds the specified stream with streamId to the room. ",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/:streamId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":room_id",
																":streamId"
															],
															"variable": [
																{
																	"key": "room_id",
																	"value": ""
																},
																{
																	"key": "streamId",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/:streamId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"conference-rooms",
																		":room_id",
																		":streamId"
																	],
																	"variable": [
																		{
																			"key": "room_id"
																		},
																		{
																			"key": "streamId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												},
												{
													"name": "Deletes the specified stream correlated with streamId in the room. Use ",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/:streamId",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":room_id",
																":streamId"
															],
															"variable": [
																{
																	"key": "room_id",
																	"value": ""
																},
																{
																	"key": "streamId",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id/:streamId",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"conference-rooms",
																		":room_id",
																		":streamId"
																	],
																	"variable": [
																		{
																			"key": "room_id"
																		},
																		{
																			"key": "streamId"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Edits previously saved conference room",
											"request": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roomId\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"roomStreamList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mode\": \"<string>\",\n  \"originAdress\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"conference-rooms",
														":room_id"
													],
													"variable": [
														{
															"key": "room_id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Returns the updated Conference room",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roomId\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"roomStreamList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mode\": \"<string>\",\n  \"originAdress\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":room_id"
															],
															"variable": [
																{
																	"key": "room_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"roomId\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"roomStreamList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mode\": \"<string>\",\n  \"originAdress\": \"<string>\"\n}"
												},
												{
													"name": "If operation is no completed for any reason",
													"originalRequest": {
														"method": "PUT",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"roomId\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"roomStreamList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mode\": \"<string>\",\n  \"originAdress\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":room_id"
															],
															"variable": [
																{
																	"key": "room_id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Deletes a conference room. The room id is key so if this is called with the same room id then new room is overwritten to old one",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"conference-rooms",
														":room_id"
													],
													"variable": [
														{
															"key": "room_id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms/:room_id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"conference-rooms",
																":room_id"
															],
															"variable": [
																{
																	"key": "room_id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Creates a conference room with the parameters. The room name is key so if this is called with the same room name then new room is overwritten to old one",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"roomId\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"roomStreamList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mode\": \"<string>\",\n  \"originAdress\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"conference-rooms"
											]
										}
									},
									"response": [
										{
											"name": "Returns the created conference room",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roomId\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"roomStreamList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mode\": \"<string>\",\n  \"originAdress\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"conference-rooms"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"roomId\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"roomStreamList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mode\": \"<string>\",\n  \"originAdress\": \"<string>\"\n}"
										},
										{
											"name": "If operation is no completed for any reason",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"roomId\": \"<string>\",\n  \"startDate\": \"<long>\",\n  \"endDate\": \"<long>\",\n  \"roomStreamList\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"mode\": \"<string>\",\n  \"originAdress\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/conference-rooms",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"conference-rooms"
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "count",
							"item": [
								{
									"name": "{search}",
									"item": [
										{
											"name": "Get the number of broadcasts depending on the searched items ",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/count/:search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"count",
														":search"
													],
													"variable": [
														{
															"key": "search",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/count/:search",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"count",
																":search"
															],
															"variable": [
																{
																	"key": "search"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"number\": \"<long>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get the total number of broadcasts",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"count"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"number\": \"<long>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "create",
							"item": [
								{
									"name": "Creates a Broadcast, IP Camera or Stream Source and returns the full broadcast object with rtmp address and other information. The different between Broadcast and IP Camera or Stream Source is that Broadcast is ingested by Ant Media ServerIP Camera or Str",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"streamId\": \"<string>\",\n  \"status\": \"created\",\n  \"playListStatus\": \"finished\",\n  \"type\": \"streamSource\",\n  \"publishType\": \"RTMP\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publish\": \"<boolean>\",\n  \"date\": \"<long>\",\n  \"plannedStartDate\": \"<long>\",\n  \"plannedEndDate\": \"<long>\",\n  \"duration\": \"<long>\",\n  \"endPointList\": [\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    }\n  ],\n  \"playListItemList\": [\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"publicStream\": \"<boolean>\",\n  \"is360\": \"<boolean>\",\n  \"listenerHookURL\": \"<string>\",\n  \"category\": \"<string>\",\n  \"ipAddr\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"quality\": \"<string>\",\n  \"speed\": \"<double>\",\n  \"streamUrl\": \"<string>\",\n  \"originAdress\": \"<string>\",\n  \"mp4Enabled\": \"<integer>\",\n  \"webMEnabled\": \"<integer>\",\n  \"expireDurationMS\": \"<integer>\",\n  \"rtmpURL\": \"<string>\",\n  \"zombi\": \"<boolean>\",\n  \"pendingPacketSize\": \"<integer>\",\n  \"hlsViewerCount\": \"<integer>\",\n  \"dashViewerCount\": \"<integer>\",\n  \"webRTCViewerCount\": \"<integer>\",\n  \"rtmpViewerCount\": \"<integer>\",\n  \"startTime\": \"<long>\",\n  \"receivedBytes\": \"<long>\",\n  \"bitrate\": \"<long>\",\n  \"userAgent\": \"<string>\",\n  \"latitude\": \"<string>\",\n  \"longitude\": \"<string>\",\n  \"altitude\": \"<string>\",\n  \"mainTrackStreamId\": \"<string>\",\n  \"subTrackStreamIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteStartTimeMs\": \"<long>\",\n  \"webRTCViewerLimit\": \"<integer>\",\n  \"hlsViewerLimit\": \"<integer>\",\n  \"dashViewerLimit\": \"<integer>\",\n  \"subFolder\": \"<string>\",\n  \"currentPlayIndex\": \"<integer>\",\n  \"metaData\": \"<string>\",\n  \"playlistLoopEnabled\": \"<boolean>\",\n  \"updateTime\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/create?autoStart=false",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"create"
											],
											"query": [
												{
													"key": "autoStart",
													"value": "false",
													"description": "Only effective if stream is IP Camera or Stream Source. If it's true, it starts automatically pulling stream. Its value is false by default"
												}
											]
										}
									},
									"response": [
										{
											"name": "Returns the created stream",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"streamId\": \"<string>\",\n  \"status\": \"created\",\n  \"playListStatus\": \"finished\",\n  \"type\": \"streamSource\",\n  \"publishType\": \"RTMP\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publish\": \"<boolean>\",\n  \"date\": \"<long>\",\n  \"plannedStartDate\": \"<long>\",\n  \"plannedEndDate\": \"<long>\",\n  \"duration\": \"<long>\",\n  \"endPointList\": [\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    }\n  ],\n  \"playListItemList\": [\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"publicStream\": \"<boolean>\",\n  \"is360\": \"<boolean>\",\n  \"listenerHookURL\": \"<string>\",\n  \"category\": \"<string>\",\n  \"ipAddr\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"quality\": \"<string>\",\n  \"speed\": \"<double>\",\n  \"streamUrl\": \"<string>\",\n  \"originAdress\": \"<string>\",\n  \"mp4Enabled\": \"<integer>\",\n  \"webMEnabled\": \"<integer>\",\n  \"expireDurationMS\": \"<integer>\",\n  \"rtmpURL\": \"<string>\",\n  \"zombi\": \"<boolean>\",\n  \"pendingPacketSize\": \"<integer>\",\n  \"hlsViewerCount\": \"<integer>\",\n  \"dashViewerCount\": \"<integer>\",\n  \"webRTCViewerCount\": \"<integer>\",\n  \"rtmpViewerCount\": \"<integer>\",\n  \"startTime\": \"<long>\",\n  \"receivedBytes\": \"<long>\",\n  \"bitrate\": \"<long>\",\n  \"userAgent\": \"<string>\",\n  \"latitude\": \"<string>\",\n  \"longitude\": \"<string>\",\n  \"altitude\": \"<string>\",\n  \"mainTrackStreamId\": \"<string>\",\n  \"subTrackStreamIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteStartTimeMs\": \"<long>\",\n  \"webRTCViewerLimit\": \"<integer>\",\n  \"hlsViewerLimit\": \"<integer>\",\n  \"dashViewerLimit\": \"<integer>\",\n  \"subFolder\": \"<string>\",\n  \"currentPlayIndex\": \"<integer>\",\n  \"metaData\": \"<string>\",\n  \"playlistLoopEnabled\": \"<boolean>\",\n  \"updateTime\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/create?autoStart=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"create"
													],
													"query": [
														{
															"key": "autoStart",
															"value": "false",
															"description": "Only effective if stream is IP Camera or Stream Source. If it's true, it starts automatically pulling stream. Its value is false by default"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"streamId\": \"<string>\",\n  \"status\": \"created\",\n  \"playListStatus\": \"finished\",\n  \"type\": \"streamSource\",\n  \"publishType\": \"RTMP\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publish\": \"<boolean>\",\n  \"date\": \"<long>\",\n  \"plannedStartDate\": \"<long>\",\n  \"plannedEndDate\": \"<long>\",\n  \"duration\": \"<long>\",\n  \"endPointList\": [\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    }\n  ],\n  \"playListItemList\": [\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"publicStream\": \"<boolean>\",\n  \"is360\": \"<boolean>\",\n  \"listenerHookURL\": \"<string>\",\n  \"category\": \"<string>\",\n  \"ipAddr\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"quality\": \"<string>\",\n  \"speed\": \"<double>\",\n  \"streamUrl\": \"<string>\",\n  \"originAdress\": \"<string>\",\n  \"mp4Enabled\": \"<integer>\",\n  \"webMEnabled\": \"<integer>\",\n  \"expireDurationMS\": \"<integer>\",\n  \"rtmpURL\": \"<string>\",\n  \"zombi\": \"<boolean>\",\n  \"pendingPacketSize\": \"<integer>\",\n  \"hlsViewerCount\": \"<integer>\",\n  \"dashViewerCount\": \"<integer>\",\n  \"webRTCViewerCount\": \"<integer>\",\n  \"rtmpViewerCount\": \"<integer>\",\n  \"startTime\": \"<long>\",\n  \"receivedBytes\": \"<long>\",\n  \"bitrate\": \"<long>\",\n  \"userAgent\": \"<string>\",\n  \"latitude\": \"<string>\",\n  \"longitude\": \"<string>\",\n  \"altitude\": \"<string>\",\n  \"mainTrackStreamId\": \"<string>\",\n  \"subTrackStreamIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteStartTimeMs\": \"<long>\",\n  \"webRTCViewerLimit\": \"<integer>\",\n  \"hlsViewerLimit\": \"<integer>\",\n  \"dashViewerLimit\": \"<integer>\",\n  \"subFolder\": \"<string>\",\n  \"currentPlayIndex\": \"<integer>\",\n  \"metaData\": \"<string>\",\n  \"playlistLoopEnabled\": \"<boolean>\",\n  \"updateTime\": \"<long>\"\n}"
										},
										{
											"name": "If stream id is already used in the data store, it returns error",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"streamId\": \"<string>\",\n  \"status\": \"created\",\n  \"playListStatus\": \"finished\",\n  \"type\": \"streamSource\",\n  \"publishType\": \"RTMP\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publish\": \"<boolean>\",\n  \"date\": \"<long>\",\n  \"plannedStartDate\": \"<long>\",\n  \"plannedEndDate\": \"<long>\",\n  \"duration\": \"<long>\",\n  \"endPointList\": [\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    }\n  ],\n  \"playListItemList\": [\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"publicStream\": \"<boolean>\",\n  \"is360\": \"<boolean>\",\n  \"listenerHookURL\": \"<string>\",\n  \"category\": \"<string>\",\n  \"ipAddr\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"quality\": \"<string>\",\n  \"speed\": \"<double>\",\n  \"streamUrl\": \"<string>\",\n  \"originAdress\": \"<string>\",\n  \"mp4Enabled\": \"<integer>\",\n  \"webMEnabled\": \"<integer>\",\n  \"expireDurationMS\": \"<integer>\",\n  \"rtmpURL\": \"<string>\",\n  \"zombi\": \"<boolean>\",\n  \"pendingPacketSize\": \"<integer>\",\n  \"hlsViewerCount\": \"<integer>\",\n  \"dashViewerCount\": \"<integer>\",\n  \"webRTCViewerCount\": \"<integer>\",\n  \"rtmpViewerCount\": \"<integer>\",\n  \"startTime\": \"<long>\",\n  \"receivedBytes\": \"<long>\",\n  \"bitrate\": \"<long>\",\n  \"userAgent\": \"<string>\",\n  \"latitude\": \"<string>\",\n  \"longitude\": \"<string>\",\n  \"altitude\": \"<string>\",\n  \"mainTrackStreamId\": \"<string>\",\n  \"subTrackStreamIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteStartTimeMs\": \"<long>\",\n  \"webRTCViewerLimit\": \"<integer>\",\n  \"hlsViewerLimit\": \"<integer>\",\n  \"dashViewerLimit\": \"<integer>\",\n  \"subFolder\": \"<string>\",\n  \"currentPlayIndex\": \"<integer>\",\n  \"metaData\": \"<string>\",\n  \"playlistLoopEnabled\": \"<boolean>\",\n  \"updateTime\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/create?autoStart=false",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"create"
													],
													"query": [
														{
															"key": "autoStart",
															"value": "false",
															"description": "Only effective if stream is IP Camera or Stream Source. If it's true, it starts automatically pulling stream. Its value is false by default"
														}
													]
												}
											},
											"status": "Bad Request",
											"code": 400,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "filter-list",
							"item": [
								{
									"name": "{offset}",
									"item": [
										{
											"name": "{size}",
											"item": [
												{
													"name": "{type}",
													"item": [
														{
															"name": "Returns filtered broadcast list according to type. It's useful for getting IP Camera and Stream Sources from the whole list. If you want to use sort mechanism, we recommend using Mongo DB.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/filter-list/:offset/:size/:type?sort_by=<string>&order_by=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"filter-list",
																		":offset",
																		":size",
																		":type"
																	],
																	"query": [
																		{
																			"key": "sort_by",
																			"value": "",
																			"description": "field to sort"
																		},
																		{
																			"key": "order_by",
																			"value": "",
																			"description": "asc for Ascending, desc Descending order"
																		}
																	],
																	"variable": [
																		{
																			"key": "offset",
																			"value": ""
																		},
																		{
																			"key": "size",
																			"value": ""
																		},
																		{
																			"key": "type",
																			"value": ""
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v2/broadcasts/filter-list/:offset/:size/:type?sort_by=<string>&order_by=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v2",
																				"broadcasts",
																				"filter-list",
																				":offset",
																				":size",
																				":type"
																			],
																			"query": [
																				{
																					"key": "sort_by",
																					"value": "",
																					"description": "field to sort"
																				},
																				{
																					"key": "order_by",
																					"value": "",
																					"description": "asc for Ascending, desc Descending order"
																				}
																			],
																			"variable": [
																				{
																					"key": "offset"
																				},
																				{
																					"key": "size"
																				},
																				{
																					"key": "type"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"streamId\": \"<string>\",\n    \"status\": \"broadcasting\",\n    \"playListStatus\": \"created\",\n    \"type\": \"playlist\",\n    \"publishType\": \"RTMP\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publish\": \"<boolean>\",\n    \"date\": \"<long>\",\n    \"plannedStartDate\": \"<long>\",\n    \"plannedEndDate\": \"<long>\",\n    \"duration\": \"<long>\",\n    \"endPointList\": [\n      {\n        \"status\": \"<string>\",\n        \"type\": \"<string>\",\n        \"rtmpUrl\": \"<string>\",\n        \"endpointServiceId\": \"<string>\"\n      },\n      {\n        \"status\": \"<string>\",\n        \"type\": \"<string>\",\n        \"rtmpUrl\": \"<string>\",\n        \"endpointServiceId\": \"<string>\"\n      }\n    ],\n    \"playListItemList\": [\n      {\n        \"streamUrl\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"streamUrl\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"publicStream\": \"<boolean>\",\n    \"is360\": \"<boolean>\",\n    \"listenerHookURL\": \"<string>\",\n    \"category\": \"<string>\",\n    \"ipAddr\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"quality\": \"<string>\",\n    \"speed\": \"<double>\",\n    \"streamUrl\": \"<string>\",\n    \"originAdress\": \"<string>\",\n    \"mp4Enabled\": \"<integer>\",\n    \"webMEnabled\": \"<integer>\",\n    \"expireDurationMS\": \"<integer>\",\n    \"rtmpURL\": \"<string>\",\n    \"zombi\": \"<boolean>\",\n    \"pendingPacketSize\": \"<integer>\",\n    \"hlsViewerCount\": \"<integer>\",\n    \"dashViewerCount\": \"<integer>\",\n    \"webRTCViewerCount\": \"<integer>\",\n    \"rtmpViewerCount\": \"<integer>\",\n    \"startTime\": \"<long>\",\n    \"receivedBytes\": \"<long>\",\n    \"bitrate\": \"<long>\",\n    \"userAgent\": \"<string>\",\n    \"latitude\": \"<string>\",\n    \"longitude\": \"<string>\",\n    \"altitude\": \"<string>\",\n    \"mainTrackStreamId\": \"<string>\",\n    \"subTrackStreamIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"absoluteStartTimeMs\": \"<long>\",\n    \"webRTCViewerLimit\": \"<integer>\",\n    \"hlsViewerLimit\": \"<integer>\",\n    \"dashViewerLimit\": \"<integer>\",\n    \"subFolder\": \"<string>\",\n    \"currentPlayIndex\": \"<integer>\",\n    \"metaData\": \"<string>\",\n    \"playlistLoopEnabled\": \"<boolean>\",\n    \"updateTime\": \"<long>\"\n  },\n  {\n    \"streamId\": \"<string>\",\n    \"status\": \"finished\",\n    \"playListStatus\": \"broadcasting\",\n    \"type\": \"playlist\",\n    \"publishType\": \"Pull\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publish\": \"<boolean>\",\n    \"date\": \"<long>\",\n    \"plannedStartDate\": \"<long>\",\n    \"plannedEndDate\": \"<long>\",\n    \"duration\": \"<long>\",\n    \"endPointList\": [\n      {\n        \"status\": \"<string>\",\n        \"type\": \"<string>\",\n        \"rtmpUrl\": \"<string>\",\n        \"endpointServiceId\": \"<string>\"\n      },\n      {\n        \"status\": \"<string>\",\n        \"type\": \"<string>\",\n        \"rtmpUrl\": \"<string>\",\n        \"endpointServiceId\": \"<string>\"\n      }\n    ],\n    \"playListItemList\": [\n      {\n        \"streamUrl\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"streamUrl\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"publicStream\": \"<boolean>\",\n    \"is360\": \"<boolean>\",\n    \"listenerHookURL\": \"<string>\",\n    \"category\": \"<string>\",\n    \"ipAddr\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"quality\": \"<string>\",\n    \"speed\": \"<double>\",\n    \"streamUrl\": \"<string>\",\n    \"originAdress\": \"<string>\",\n    \"mp4Enabled\": \"<integer>\",\n    \"webMEnabled\": \"<integer>\",\n    \"expireDurationMS\": \"<integer>\",\n    \"rtmpURL\": \"<string>\",\n    \"zombi\": \"<boolean>\",\n    \"pendingPacketSize\": \"<integer>\",\n    \"hlsViewerCount\": \"<integer>\",\n    \"dashViewerCount\": \"<integer>\",\n    \"webRTCViewerCount\": \"<integer>\",\n    \"rtmpViewerCount\": \"<integer>\",\n    \"startTime\": \"<long>\",\n    \"receivedBytes\": \"<long>\",\n    \"bitrate\": \"<long>\",\n    \"userAgent\": \"<string>\",\n    \"latitude\": \"<string>\",\n    \"longitude\": \"<string>\",\n    \"altitude\": \"<string>\",\n    \"mainTrackStreamId\": \"<string>\",\n    \"subTrackStreamIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"absoluteStartTimeMs\": \"<long>\",\n    \"webRTCViewerLimit\": \"<integer>\",\n    \"hlsViewerLimit\": \"<integer>\",\n    \"dashViewerLimit\": \"<integer>\",\n    \"subFolder\": \"<string>\",\n    \"currentPlayIndex\": \"<integer>\",\n    \"metaData\": \"<string>\",\n    \"playlistLoopEnabled\": \"<boolean>\",\n    \"updateTime\": \"<long>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "import-to-stalker",
							"item": [
								{
									"name": "Import Live Streams to Stalker Portal",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/import-to-stalker",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"import-to-stalker"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/import-to-stalker",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"import-to-stalker"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "list",
							"item": [
								{
									"name": "{offset}",
									"item": [
										{
											"name": "{size}",
											"item": [
												{
													"name": "Gets the broadcast list from database. It returns max 50 items at a time",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/list/:offset/:size?type_by=<string>&sort_by=<string>&order_by=<string>&search=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"list",
																":offset",
																":size"
															],
															"query": [
																{
																	"key": "type_by",
																	"value": "",
																	"description": "Type of the stream. Possible values are \"liveStream\", \"ipCamera\", \"streamSource\", \"VoD\""
																},
																{
																	"key": "sort_by",
																	"value": "",
																	"description": "Field to sort. Possible values are \"name\", \"date\", \"status\""
																},
																{
																	"key": "order_by",
																	"value": "",
																	"description": "\"asc\" for Ascending, \"desc\" Descending order"
																},
																{
																	"key": "search",
																	"value": "",
																	"description": "Search parameter, returns specific items that contains search string"
																}
															],
															"variable": [
																{
																	"key": "offset",
																	"value": ""
																},
																{
																	"key": "size",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/list/:offset/:size?type_by=<string>&sort_by=<string>&order_by=<string>&search=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"list",
																		":offset",
																		":size"
																	],
																	"query": [
																		{
																			"key": "type_by",
																			"value": "",
																			"description": "Type of the stream. Possible values are \"liveStream\", \"ipCamera\", \"streamSource\", \"VoD\""
																		},
																		{
																			"key": "sort_by",
																			"value": "",
																			"description": "Field to sort. Possible values are \"name\", \"date\", \"status\""
																		},
																		{
																			"key": "order_by",
																			"value": "",
																			"description": "\"asc\" for Ascending, \"desc\" Descending order"
																		},
																		{
																			"key": "search",
																			"value": "",
																			"description": "Search parameter, returns specific items that contains search string"
																		}
																	],
																	"variable": [
																		{
																			"key": "offset"
																		},
																		{
																			"key": "size"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"streamId\": \"<string>\",\n    \"status\": \"broadcasting\",\n    \"playListStatus\": \"created\",\n    \"type\": \"playlist\",\n    \"publishType\": \"RTMP\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publish\": \"<boolean>\",\n    \"date\": \"<long>\",\n    \"plannedStartDate\": \"<long>\",\n    \"plannedEndDate\": \"<long>\",\n    \"duration\": \"<long>\",\n    \"endPointList\": [\n      {\n        \"status\": \"<string>\",\n        \"type\": \"<string>\",\n        \"rtmpUrl\": \"<string>\",\n        \"endpointServiceId\": \"<string>\"\n      },\n      {\n        \"status\": \"<string>\",\n        \"type\": \"<string>\",\n        \"rtmpUrl\": \"<string>\",\n        \"endpointServiceId\": \"<string>\"\n      }\n    ],\n    \"playListItemList\": [\n      {\n        \"streamUrl\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"streamUrl\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"publicStream\": \"<boolean>\",\n    \"is360\": \"<boolean>\",\n    \"listenerHookURL\": \"<string>\",\n    \"category\": \"<string>\",\n    \"ipAddr\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"quality\": \"<string>\",\n    \"speed\": \"<double>\",\n    \"streamUrl\": \"<string>\",\n    \"originAdress\": \"<string>\",\n    \"mp4Enabled\": \"<integer>\",\n    \"webMEnabled\": \"<integer>\",\n    \"expireDurationMS\": \"<integer>\",\n    \"rtmpURL\": \"<string>\",\n    \"zombi\": \"<boolean>\",\n    \"pendingPacketSize\": \"<integer>\",\n    \"hlsViewerCount\": \"<integer>\",\n    \"dashViewerCount\": \"<integer>\",\n    \"webRTCViewerCount\": \"<integer>\",\n    \"rtmpViewerCount\": \"<integer>\",\n    \"startTime\": \"<long>\",\n    \"receivedBytes\": \"<long>\",\n    \"bitrate\": \"<long>\",\n    \"userAgent\": \"<string>\",\n    \"latitude\": \"<string>\",\n    \"longitude\": \"<string>\",\n    \"altitude\": \"<string>\",\n    \"mainTrackStreamId\": \"<string>\",\n    \"subTrackStreamIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"absoluteStartTimeMs\": \"<long>\",\n    \"webRTCViewerLimit\": \"<integer>\",\n    \"hlsViewerLimit\": \"<integer>\",\n    \"dashViewerLimit\": \"<integer>\",\n    \"subFolder\": \"<string>\",\n    \"currentPlayIndex\": \"<integer>\",\n    \"metaData\": \"<string>\",\n    \"playlistLoopEnabled\": \"<boolean>\",\n    \"updateTime\": \"<long>\"\n  },\n  {\n    \"streamId\": \"<string>\",\n    \"status\": \"finished\",\n    \"playListStatus\": \"broadcasting\",\n    \"type\": \"playlist\",\n    \"publishType\": \"Pull\",\n    \"name\": \"<string>\",\n    \"description\": \"<string>\",\n    \"publish\": \"<boolean>\",\n    \"date\": \"<long>\",\n    \"plannedStartDate\": \"<long>\",\n    \"plannedEndDate\": \"<long>\",\n    \"duration\": \"<long>\",\n    \"endPointList\": [\n      {\n        \"status\": \"<string>\",\n        \"type\": \"<string>\",\n        \"rtmpUrl\": \"<string>\",\n        \"endpointServiceId\": \"<string>\"\n      },\n      {\n        \"status\": \"<string>\",\n        \"type\": \"<string>\",\n        \"rtmpUrl\": \"<string>\",\n        \"endpointServiceId\": \"<string>\"\n      }\n    ],\n    \"playListItemList\": [\n      {\n        \"streamUrl\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"streamUrl\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"publicStream\": \"<boolean>\",\n    \"is360\": \"<boolean>\",\n    \"listenerHookURL\": \"<string>\",\n    \"category\": \"<string>\",\n    \"ipAddr\": \"<string>\",\n    \"username\": \"<string>\",\n    \"password\": \"<string>\",\n    \"quality\": \"<string>\",\n    \"speed\": \"<double>\",\n    \"streamUrl\": \"<string>\",\n    \"originAdress\": \"<string>\",\n    \"mp4Enabled\": \"<integer>\",\n    \"webMEnabled\": \"<integer>\",\n    \"expireDurationMS\": \"<integer>\",\n    \"rtmpURL\": \"<string>\",\n    \"zombi\": \"<boolean>\",\n    \"pendingPacketSize\": \"<integer>\",\n    \"hlsViewerCount\": \"<integer>\",\n    \"dashViewerCount\": \"<integer>\",\n    \"webRTCViewerCount\": \"<integer>\",\n    \"rtmpViewerCount\": \"<integer>\",\n    \"startTime\": \"<long>\",\n    \"receivedBytes\": \"<long>\",\n    \"bitrate\": \"<long>\",\n    \"userAgent\": \"<string>\",\n    \"latitude\": \"<string>\",\n    \"longitude\": \"<string>\",\n    \"altitude\": \"<string>\",\n    \"mainTrackStreamId\": \"<string>\",\n    \"subTrackStreamIds\": [\n      \"<string>\",\n      \"<string>\"\n    ],\n    \"absoluteStartTimeMs\": \"<long>\",\n    \"webRTCViewerLimit\": \"<integer>\",\n    \"hlsViewerLimit\": \"<integer>\",\n    \"dashViewerLimit\": \"<integer>\",\n    \"subFolder\": \"<string>\",\n    \"currentPlayIndex\": \"<integer>\",\n    \"metaData\": \"<string>\",\n    \"playlistLoopEnabled\": \"<boolean>\",\n    \"updateTime\": \"<long>\"\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "onvif-devices",
							"item": [
								{
									"name": "Get Discovered ONVIF IP Cameras, this service perform a discovery inside of internal network and get automatically  ONVIF enabled camera information",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/onvif-devices",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"onvif-devices"
											]
										},
										"description": "Notes here"
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/onvif-devices",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"onvif-devices"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "total-broadcast-statistics",
							"item": [
								{
									"name": "Get the total broadcast live statistics total HLS watcher count, total WebRTC watcher count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/total-broadcast-statistics",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"total-broadcast-statistics"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/total-broadcast-statistics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"total-broadcast-statistics"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"totalRTMPWatchersCount\": \"<integer>\",\n  \"totalHLSWatchersCount\": \"<integer>\",\n  \"totalWebRTCWatchersCount\": \"<integer>\",\n  \"totalDASHWatchersCount\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "validate-token",
							"item": [
								{
									"name": "Perform validation of token for requested stream. If validated, success field is true, not validated success field false",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"tokenId\": \"<string>\",\n  \"streamId\": \"<string>\",\n  \"expireDate\": \"<long>\",\n  \"type\": \"<string>\",\n  \"roomId\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/validate-token",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"validate-token"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"tokenId\": \"<string>\",\n  \"streamId\": \"<string>\",\n  \"expireDate\": \"<long>\",\n  \"type\": \"<string>\",\n  \"roomId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/validate-token",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"validate-token"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "webrtc-receive-low-level-stats",
							"item": [
								{
									"name": "Get WebRTC Low Level receive stats in general",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/webrtc-receive-low-level-stats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"webrtc-receive-low-level-stats"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/webrtc-receive-low-level-stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"webrtc-receive-low-level-stats"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"audioSendStats\": {\n    \"audioPacketsSent\": \"<long>\",\n    \"audioBytesSent\": \"<integer>\",\n    \"audioPacketsPerSecond\": \"<long>\",\n    \"audioBytesSentPerSecond\": \"<integer>\",\n    \"timeMs\": \"<long>\"\n  },\n  \"videoSendStats\": {\n    \"videoFirCount\": \"<long>\",\n    \"videoPliCount\": \"<long>\",\n    \"videoNackCount\": \"<long>\",\n    \"videoPacketsSent\": \"<long>\",\n    \"videoFramesEncoded\": \"<long>\",\n    \"videoBytesSent\": \"<integer>\",\n    \"videoPacketsSentPerSecond\": \"<long>\",\n    \"videoBytesSentPerSecond\": \"<integer>\",\n    \"videoFramesEncodedPerSecond\": \"<long>\",\n    \"timeMs\": \"<long>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "webrtc-send-low-level-stats",
							"item": [
								{
									"name": "Get WebRTC Low Level Send stats in general",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/webrtc-send-low-level-stats",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												"webrtc-send-low-level-stats"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/webrtc-send-low-level-stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														"webrtc-send-low-level-stats"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"audioSendStats\": {\n    \"audioPacketsSent\": \"<long>\",\n    \"audioBytesSent\": \"<integer>\",\n    \"audioPacketsPerSecond\": \"<long>\",\n    \"audioBytesSentPerSecond\": \"<integer>\",\n    \"timeMs\": \"<long>\"\n  },\n  \"videoSendStats\": {\n    \"videoFirCount\": \"<long>\",\n    \"videoPliCount\": \"<long>\",\n    \"videoNackCount\": \"<long>\",\n    \"videoPacketsSent\": \"<long>\",\n    \"videoFramesEncoded\": \"<long>\",\n    \"videoBytesSent\": \"<integer>\",\n    \"videoPacketsSentPerSecond\": \"<long>\",\n    \"videoBytesSentPerSecond\": \"<integer>\",\n    \"videoFramesEncodedPerSecond\": \"<long>\",\n    \"timeMs\": \"<long>\"\n  }\n}"
										}
									]
								}
							]
						},
						{
							"name": "webrtc-viewers",
							"item": [
								{
									"name": "list",
									"item": [
										{
											"name": "{offset}",
											"item": [
												{
													"name": "{size}",
													"item": [
														{
															"name": "get Web RTC Viewer List",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/webrtc-viewers/list/:offset/:size?sort_by=<string>&order_by=<string>&search=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"webrtc-viewers",
																		"list",
																		":offset",
																		":size"
																	],
																	"query": [
																		{
																			"key": "sort_by",
																			"value": "",
																			"description": "field to sort"
																		},
																		{
																			"key": "order_by",
																			"value": "",
																			"description": "asc for Ascending, desc Descending order"
																		},
																		{
																			"key": "search",
																			"value": "",
																			"description": "Search parameter, returns specific items that contains search string"
																		}
																	],
																	"variable": [
																		{
																			"key": "offset",
																			"value": ""
																		},
																		{
																			"key": "size",
																			"value": ""
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v2/broadcasts/webrtc-viewers/list/:offset/:size?sort_by=<string>&order_by=<string>&search=<string>",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v2",
																				"broadcasts",
																				"webrtc-viewers",
																				"list",
																				":offset",
																				":size"
																			],
																			"query": [
																				{
																					"key": "sort_by",
																					"value": "",
																					"description": "field to sort"
																				},
																				{
																					"key": "order_by",
																					"value": "",
																					"description": "asc for Ascending, desc Descending order"
																				},
																				{
																					"key": "search",
																					"value": "",
																					"description": "Search parameter, returns specific items that contains search string"
																				}
																			],
																			"variable": [
																				{
																					"key": "offset"
																				},
																				{
																					"key": "size"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"viewerId\": \"<string>\",\n    \"streamId\": \"<string>\",\n    \"edgeAddress\": \"<string>\"\n  },\n  {\n    \"viewerId\": \"<string>\",\n    \"streamId\": \"<string>\",\n    \"edgeAddress\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "{webrtc-viewer-id}",
									"item": [
										{
											"name": "stop",
											"item": [
												{
													"name": "Stop player with a specified id",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/webrtc-viewers/:webrtc-viewer-id/stop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																"webrtc-viewers",
																":webrtc-viewer-id",
																"stop"
															],
															"variable": [
																{
																	"key": "webrtc-viewer-id",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/webrtc-viewers/:webrtc-viewer-id/stop",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		"webrtc-viewers",
																		":webrtc-viewer-id",
																		"stop"
																	],
																	"variable": [
																		{
																			"key": "webrtc-viewer-id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "broadcast-statistics",
									"item": [
										{
											"name": "Get the broadcast live statistics total RTMP watcher count, total HLS watcher count, total WebRTC watcher count",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/broadcast-statistics",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"broadcast-statistics"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/broadcast-statistics",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"broadcast-statistics"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"totalRTMPWatchersCount\": \"<integer>\",\n  \"totalHLSWatchersCount\": \"<integer>\",\n  \"totalWebRTCWatchersCount\": \"<integer>\",\n  \"totalDASHWatchersCount\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "data",
									"item": [
										{
											"name": "Send stream participants a message through Data Channel in a WebRTC stream",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/data",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"data"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/data",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"data"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "detections",
									"item": [
										{
											"name": "count",
											"item": [
												{
													"name": "Get total number of detected objects",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/detections/count",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"detections",
																"count"
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/:id/detections/count",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		":id",
																		"detections",
																		"count"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": ""
														}
													]
												}
											]
										},
										{
											"name": "{offset}",
											"item": [
												{
													"name": "{size}",
													"item": [
														{
															"name": "Get detected objects from the stream based on offset and size",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/:id/detections/:offset/:size",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		":id",
																		"detections",
																		":offset",
																		":size"
																	],
																	"variable": [
																		{
																			"key": "id",
																			"value": ""
																		},
																		{
																			"key": "offset",
																			"value": ""
																		},
																		{
																			"key": "size",
																			"value": ""
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v2/broadcasts/:id/detections/:offset/:size",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v2",
																				"broadcasts",
																				":id",
																				"detections",
																				":offset",
																				":size"
																			],
																			"variable": [
																				{
																					"key": "id"
																				},
																				{
																					"key": "offset"
																				},
																				{
																					"key": "size"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"objectName\": \"<string>\",\n    \"probability\": \"<float>\",\n    \"detectionTime\": \"<long>\",\n    \"imageId\": \"<string>\",\n    \"minX\": \"<double>\",\n    \"minY\": \"<double>\",\n    \"maxX\": \"<double>\",\n    \"maxY\": \"<double>\"\n  },\n  {\n    \"objectName\": \"<string>\",\n    \"probability\": \"<float>\",\n    \"detectionTime\": \"<long>\",\n    \"imageId\": \"<string>\",\n    \"minX\": \"<double>\",\n    \"minY\": \"<double>\",\n    \"maxX\": \"<double>\",\n    \"maxY\": \"<double>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "endpoint",
									"item": [
										{
											"name": "add Endpoint V2",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/endpoint?rtmpUrl=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"endpoint"
													],
													"query": [
														{
															"key": "rtmpUrl",
															"value": "",
															"description": "(Required) RTMP url of the endpoint that stream will be republished. If required, please encode the URL"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/endpoint?rtmpUrl=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"endpoint"
															],
															"query": [
																{
																	"key": "rtmpUrl",
																	"value": "",
																	"description": "(Required) RTMP url of the endpoint that stream will be republished. If required, please encode the URL"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "remove Endpoint",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/endpoint?rtmpUrl=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"endpoint"
													],
													"query": [
														{
															"key": "rtmpUrl",
															"value": "",
															"description": "(Required) RTMP url of the endpoint that will be stopped."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/endpoint?rtmpUrl=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"endpoint"
															],
															"query": [
																{
																	"key": "rtmpUrl",
																	"value": "",
																	"description": "(Required) RTMP url of the endpoint that will be stopped."
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "ip-camera",
									"item": [
										{
											"name": "device-profiles",
											"item": [
												{
													"name": "Get The Profile List for an ONVIF IP Cameras",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/ip-camera/device-profiles",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"ip-camera",
																"device-profiles"
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																}
															]
														},
														"description": "Notes here"
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/:id/ip-camera/device-profiles",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		":id",
																		"ip-camera",
																		"device-profiles"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "move",
											"item": [
												{
													"name": "Move IP Camera. It support continuous, relative and absolute move. By default it's relative move.Movement parameters should be given according to movement type. Generally here are the values For Absolute move, value X and value Y is between -1.0f and 1.0f",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/ip-camera/move?valueX=<float>&valueY=<float>&valueZ=<float>&movement=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"ip-camera",
																"move"
															],
															"query": [
																{
																	"key": "valueX",
																	"value": "",
																	"description": "Movement in X direction. If not specified, it's assumed to be zero. Valid ranges between -1.0f and 1.0f for all movements "
																},
																{
																	"key": "valueY",
																	"value": "",
																	"description": "Movement in Y direction. If not specified, it's assumed to be zero. Valid ranges between -1.0f and 1.0f for all movements "
																},
																{
																	"key": "valueZ",
																	"value": "",
																	"description": "Movement in Zoom. If not specified, it's assumed to be zero. Valid ranges for relative and continous move is between -1.0f and 1.0f. For absolute move between 0.0f and 1.0f "
																},
																{
																	"key": "movement",
																	"value": "",
																	"description": "Movement type. It can be absolute, relative or continuous. If not specified, it's relative"
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/:id/ip-camera/move?valueX=<float>&valueY=<float>&valueZ=<float>&movement=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		":id",
																		"ip-camera",
																		"move"
																	],
																	"query": [
																		{
																			"key": "valueX",
																			"value": "",
																			"description": "Movement in X direction. If not specified, it's assumed to be zero. Valid ranges between -1.0f and 1.0f for all movements "
																		},
																		{
																			"key": "valueY",
																			"value": "",
																			"description": "Movement in Y direction. If not specified, it's assumed to be zero. Valid ranges between -1.0f and 1.0f for all movements "
																		},
																		{
																			"key": "valueZ",
																			"value": "",
																			"description": "Movement in Zoom. If not specified, it's assumed to be zero. Valid ranges for relative and continous move is between -1.0f and 1.0f. For absolute move between 0.0f and 1.0f "
																		},
																		{
																			"key": "movement",
																			"value": "",
																			"description": "Movement type. It can be absolute, relative or continuous. If not specified, it's relative"
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "stop-move",
											"item": [
												{
													"name": "Stop move for IP Camera.",
													"request": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/ip-camera/stop-move",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"ip-camera",
																"stop-move"
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "POST",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/:id/ip-camera/stop-move",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		":id",
																		"ip-camera",
																		"stop-move"
																	],
																	"variable": [
																		{
																			"key": "id"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "jwt-token",
									"item": [
										{
											"name": "Generates JWT token for specified stream. It's not required to let the server generate JWT. Generally JWT tokens should be generated on the client side.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/jwt-token?expireDate=<long>&type=<string>&roomId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"jwt-token"
													],
													"query": [
														{
															"key": "expireDate",
															"value": "",
															"description": "(Required) The expire time of the token. It's in unix timestamp seconds."
														},
														{
															"key": "type",
															"value": "",
															"description": "(Required) Type of the JWT token. It may be play or publish "
														},
														{
															"key": "roomId",
															"value": "",
															"description": "Room Id that token belongs to. It's not mandatory "
														}
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Returns token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/jwt-token?expireDate=<long>&type=<string>&roomId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"jwt-token"
															],
															"query": [
																{
																	"key": "expireDate",
																	"value": "",
																	"description": "(Required) The expire time of the token. It's in unix timestamp seconds."
																},
																{
																	"key": "type",
																	"value": "",
																	"description": "(Required) Type of the JWT token. It may be play or publish "
																},
																{
																	"key": "roomId",
																	"value": "",
																	"description": "Room Id that token belongs to. It's not mandatory "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tokenId\": \"<string>\",\n  \"streamId\": \"<string>\",\n  \"expireDate\": \"<long>\",\n  \"type\": \"<string>\",\n  \"roomId\": \"<string>\"\n}"
												},
												{
													"name": "When there is an error in creating token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/jwt-token?expireDate=<long>&type=<string>&roomId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"jwt-token"
															],
															"query": [
																{
																	"key": "expireDate",
																	"value": "",
																	"description": "(Required) The expire time of the token. It's in unix timestamp seconds."
																},
																{
																	"key": "type",
																	"value": "",
																	"description": "(Required) Type of the JWT token. It may be play or publish "
																},
																{
																	"key": "roomId",
																	"value": "",
																	"description": "Room Id that token belongs to. It's not mandatory "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "recording",
									"item": [
										{
											"name": "{recording-status}",
											"item": [
												{
													"name": "Set stream specific recording setting, this setting overrides general Mp4 and WebM Muxing Setting",
													"request": {
														"method": "PUT",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/recording/:recording-status?recordType=<string>&resolutionHeight=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"recording",
																":recording-status"
															],
															"query": [
																{
																	"key": "recordType",
																	"value": "",
																	"description": "Record type: 'mp4' or 'webm'. It's optional parameter."
																},
																{
																	"key": "resolutionHeight",
																	"value": "",
																	"description": "Resolution height of the broadcast that is wanted to record. "
																}
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																},
																{
																	"key": "recording-status",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "PUT",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/:id/recording/:recording-status?recordType=<string>&resolutionHeight=<integer>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		":id",
																		"recording",
																		":recording-status"
																	],
																	"query": [
																		{
																			"key": "recordType",
																			"value": "",
																			"description": "Record type: 'mp4' or 'webm'. It's optional parameter."
																		},
																		{
																			"key": "resolutionHeight",
																			"value": "",
																			"description": "Resolution height of the broadcast that is wanted to record. "
																		}
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "recording-status"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "rtmp-endpoint",
									"item": [
										{
											"name": "Adds a third party rtmp end point to the stream. It supports adding after broadcast is started. Resolution can be specified to send a specific adaptive resolution. If an url is already added to a stream, trying to add the same rtmp url will return false.",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"rtmpUrl\": \"<string>\",\n  \"endpointServiceId\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/rtmp-endpoint?resolutionHeight=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"rtmp-endpoint"
													],
													"query": [
														{
															"key": "resolutionHeight",
															"value": "",
															"description": "Resolution height of the broadcast that is wanted to send to the RTMP endpoint. "
														}
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"status\": \"<string>\",\n  \"type\": \"<string>\",\n  \"rtmpUrl\": \"<string>\",\n  \"endpointServiceId\": \"<string>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/rtmp-endpoint?resolutionHeight=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"rtmp-endpoint"
															],
															"query": [
																{
																	"key": "resolutionHeight",
																	"value": "",
																	"description": "Resolution height of the broadcast that is wanted to send to the RTMP endpoint. "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Remove third pary rtmp end point from the stream. For the stream that is broadcasting, it will stop immediately",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/rtmp-endpoint?endpointServiceId=<string>&resolutionHeight=<integer>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"rtmp-endpoint"
													],
													"query": [
														{
															"key": "endpointServiceId",
															"value": "",
															"description": "(Required) RTMP url of the endpoint that will be stopped."
														},
														{
															"key": "resolutionHeight",
															"value": "",
															"description": "(Required) Resolution specifier if endpoint has been added with resolution. Only applicable if user added RTMP endpoint with a resolution speficier. Otherwise won't work and won't remove the endpoint."
														}
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/rtmp-endpoint?endpointServiceId=<string>&resolutionHeight=<integer>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"rtmp-endpoint"
															],
															"query": [
																{
																	"key": "endpointServiceId",
																	"value": "",
																	"description": "(Required) RTMP url of the endpoint that will be stopped."
																},
																{
																	"key": "resolutionHeight",
																	"value": "",
																	"description": "(Required) Resolution specifier if endpoint has been added with resolution. Only applicable if user added RTMP endpoint with a resolution speficier. Otherwise won't work and won't remove the endpoint."
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "rtmp-to-webrtc-stats",
									"item": [
										{
											"name": "Get RTMP to WebRTC path stats in general",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/rtmp-to-webrtc-stats",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"rtmp-to-webrtc-stats"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/rtmp-to-webrtc-stats",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"rtmp-to-webrtc-stats"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"streamId\": \"<string>\",\n  \"encoderCount\": \"<integer>\",\n  \"totalVideoIngestTime\": \"<long>\",\n  \"totalIngestedVideoPacketCount\": \"<long>\",\n  \"totalVideoDecodeTime\": \"<long>\",\n  \"totalDecodedVideoFrameCount\": \"<long>\",\n  \"totalVideoEncodeQueueTime\": \"<long>\",\n  \"totalVideoEncodeTime\": \"<long>\",\n  \"totalEncodedVideoPacketCount\": \"<long>\",\n  \"totalVideoDeliveryTime\": \"<long>\",\n  \"totalDeliveredVideoPacketCount\": \"<long>\",\n  \"absoluteTotalIngestTime\": \"<long>\",\n  \"absoluteTimeMs\": \"<long>\",\n  \"absouteTotalLatencyUntilRTPPacketizingTimeMs\": \"<long>\",\n  \"frameId\": \"<long>\",\n  \"captureTimeMs\": \"<long>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "start",
									"item": [
										{
											"name": "Start streaming sources(IP Cameras, Stream Sources, PlayLists) ",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/start",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"start"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/start",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"start"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "stop",
									"item": [
										{
											"name": "Stop streaming for the active stream. It both stops ingested(RTMP, WebRTC) or pulled stream sources (IP Cameras and Stream Sources)",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/stop",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"stop"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/stop",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"stop"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "stream-info",
									"item": [
										{
											"name": "Returns the stream info(width, height, bitrates and video codec) of the stream",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/stream-info",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"stream-info"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/stream-info",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"stream-info"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "[\n  {\n    \"videoHeight\": \"<integer>\",\n    \"videoWidth\": \"<integer>\",\n    \"videoBitrate\": \"<integer>\",\n    \"audioBitrate\": \"<integer>\",\n    \"videoCodec\": \"H265\"\n  },\n  {\n    \"videoHeight\": \"<integer>\",\n    \"videoWidth\": \"<integer>\",\n    \"videoBitrate\": \"<integer>\",\n    \"audioBitrate\": \"<integer>\",\n    \"videoCodec\": \"PNG\"\n  }\n]"
												}
											]
										}
									]
								},
								{
									"name": "subscriber-stats",
									"item": [
										{
											"name": "list",
											"item": [
												{
													"name": "{offset}",
													"item": [
														{
															"name": "{size}",
															"item": [
																{
																	"name": "Get the all subscriber statistics of the requested stream",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v2/broadcasts/:id/subscriber-stats/list/:offset/:size",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v2",
																				"broadcasts",
																				":id",
																				"subscriber-stats",
																				"list",
																				":offset",
																				":size"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": ""
																				},
																				{
																					"key": "offset",
																					"value": ""
																				},
																				{
																					"key": "size",
																					"value": ""
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v2/broadcasts/:id/subscriber-stats/list/:offset/:size",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v2",
																						"broadcasts",
																						":id",
																						"subscriber-stats",
																						"list",
																						":offset",
																						":size"
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "offset"
																						},
																						{
																							"key": "size"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"subscriberId\": \"<string>\",\n    \"streamId\": \"<string>\",\n    \"connectionEvents\": [\n      {\n        \"timestamp\": \"<long>\",\n        \"eventType\": \"<string>\",\n        \"instanceIP\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"timestamp\": \"<long>\",\n        \"eventType\": \"<string>\",\n        \"instanceIP\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"avgVideoBitrate\": \"<long>\",\n    \"avgAudioBitrate\": \"<long>\"\n  },\n  {\n    \"subscriberId\": \"<string>\",\n    \"streamId\": \"<string>\",\n    \"connectionEvents\": [\n      {\n        \"timestamp\": \"<long>\",\n        \"eventType\": \"<string>\",\n        \"instanceIP\": \"<string>\",\n        \"type\": \"<string>\"\n      },\n      {\n        \"timestamp\": \"<long>\",\n        \"eventType\": \"<string>\",\n        \"instanceIP\": \"<string>\",\n        \"type\": \"<string>\"\n      }\n    ],\n    \"avgVideoBitrate\": \"<long>\",\n    \"avgAudioBitrate\": \"<long>\"\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										}
									]
								},
								{
									"name": "subscribers",
									"item": [
										{
											"name": "list",
											"item": [
												{
													"name": "{offset}",
													"item": [
														{
															"name": "{size}",
															"item": [
																{
																	"name": "Get the all subscribers of the requested stream",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v2/broadcasts/:id/subscribers/list/:offset/:size",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v2",
																				"broadcasts",
																				":id",
																				"subscribers",
																				"list",
																				":offset",
																				":size"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": ""
																				},
																				{
																					"key": "offset",
																					"value": ""
																				},
																				{
																					"key": "size",
																					"value": ""
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v2/broadcasts/:id/subscribers/list/:offset/:size",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v2",
																						"broadcasts",
																						":id",
																						"subscribers",
																						"list",
																						":offset",
																						":size"
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "offset"
																						},
																						{
																							"key": "size"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"subscriberId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"connected\": \"<boolean>\",\n    \"currentConcurrentConnections\": \"<integer>\",\n    \"concurrentConnectionsLimit\": \"<integer>\"\n  },\n  {\n    \"subscriberId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"connected\": \"<boolean>\",\n    \"currentConcurrentConnections\": \"<integer>\",\n    \"concurrentConnectionsLimit\": \"<integer>\"\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": "{sid}",
											"item": [
												{
													"name": "Delete specific subscriber from data store for selected stream",
													"request": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/subscribers/:sid",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"subscribers",
																":sid"
															],
															"variable": [
																{
																	"key": "id",
																	"value": ""
																},
																{
																	"key": "sid",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "DELETE",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/:id/subscribers/:sid",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		":id",
																		"subscribers",
																		":sid"
																	],
																	"variable": [
																		{
																			"key": "id"
																		},
																		{
																			"key": "sid"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
														}
													]
												}
											]
										},
										{
											"name": "Add Subscriber to the requested stream ",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"subscriberId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"connected\": \"<boolean>\",\n  \"currentConcurrentConnections\": \"<integer>\",\n  \"concurrentConnectionsLimit\": \"<integer>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/subscribers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"subscribers"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Content-Type",
																"value": "application/json"
															},
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"body": {
															"mode": "raw",
															"raw": "{\n  \"subscriberId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"connected\": \"<boolean>\",\n  \"currentConcurrentConnections\": \"<integer>\",\n  \"concurrentConnectionsLimit\": \"<integer>\"\n}",
															"options": {
																"raw": {
																	"headerFamily": "json",
																	"language": "json"
																}
															}
														},
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/subscribers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"subscribers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": " Removes all subscriber related with the requested stream",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/subscribers",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"subscribers"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/subscribers",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"subscribers"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "subtrack",
									"item": [
										{
											"name": "Add a subtrack to a main track (broadcast).",
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/subtrack?id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"subtrack"
													],
													"query": [
														{
															"key": "id",
															"value": "",
															"description": "(Required) Subtrack Stream Id"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "POST",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/subtrack?id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"subtrack"
															],
															"query": [
																{
																	"key": "id",
																	"value": "",
																	"description": "(Required) Subtrack Stream Id"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										},
										{
											"name": "Delete a subtrack from a main track (broadcast).",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/subtrack?id=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"subtrack"
													],
													"query": [
														{
															"key": "id",
															"value": "",
															"description": "(Required) Subtrack Stream Id"
														}
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/subtrack?id=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"subtrack"
															],
															"query": [
																{
																	"key": "id",
																	"value": "",
																	"description": "(Required) Subtrack Stream Id"
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "token",
									"item": [
										{
											"name": "Generates random one-time token for specified stream",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/token?expireDate=<long>&type=<string>&roomId=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"token"
													],
													"query": [
														{
															"key": "expireDate",
															"value": "",
															"description": "(Required) The expire time of the token. It's in unix timestamp seconds"
														},
														{
															"key": "type",
															"value": "",
															"description": "(Required) Type of the token. It may be play or publish "
														},
														{
															"key": "roomId",
															"value": "",
															"description": "Room Id that token belongs to. It's not mandatory "
														}
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "Returns token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/token?expireDate=<long>&type=<string>&roomId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"token"
															],
															"query": [
																{
																	"key": "expireDate",
																	"value": "",
																	"description": "(Required) The expire time of the token. It's in unix timestamp seconds"
																},
																{
																	"key": "type",
																	"value": "",
																	"description": "(Required) Type of the token. It may be play or publish "
																},
																{
																	"key": "roomId",
																	"value": "",
																	"description": "Room Id that token belongs to. It's not mandatory "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"tokenId\": \"<string>\",\n  \"streamId\": \"<string>\",\n  \"expireDate\": \"<long>\",\n  \"type\": \"<string>\",\n  \"roomId\": \"<string>\"\n}"
												},
												{
													"name": "When there is an error in creating token",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/token?expireDate=<long>&type=<string>&roomId=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"token"
															],
															"query": [
																{
																	"key": "expireDate",
																	"value": "",
																	"description": "(Required) The expire time of the token. It's in unix timestamp seconds"
																},
																{
																	"key": "type",
																	"value": "",
																	"description": "(Required) Type of the token. It may be play or publish "
																},
																{
																	"key": "roomId",
																	"value": "",
																	"description": "Room Id that token belongs to. It's not mandatory "
																}
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "Bad Request",
													"code": 400,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "tokens",
									"item": [
										{
											"name": "list",
											"item": [
												{
													"name": "{offset}",
													"item": [
														{
															"name": "{size}",
															"item": [
																{
																	"name": "Get the all tokens of requested stream",
																	"request": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v2/broadcasts/:id/tokens/list/:offset/:size",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v2",
																				"broadcasts",
																				":id",
																				"tokens",
																				"list",
																				":offset",
																				":size"
																			],
																			"variable": [
																				{
																					"key": "id",
																					"value": ""
																				},
																				{
																					"key": "offset",
																					"value": ""
																				},
																				{
																					"key": "size",
																					"value": ""
																				}
																			]
																		}
																	},
																	"response": [
																		{
																			"name": "successful operation",
																			"originalRequest": {
																				"method": "GET",
																				"header": [
																					{
																						"key": "Accept",
																						"value": "application/json"
																					}
																				],
																				"url": {
																					"raw": "{{baseUrl}}/v2/broadcasts/:id/tokens/list/:offset/:size",
																					"host": [
																						"{{baseUrl}}"
																					],
																					"path": [
																						"v2",
																						"broadcasts",
																						":id",
																						"tokens",
																						"list",
																						":offset",
																						":size"
																					],
																					"variable": [
																						{
																							"key": "id"
																						},
																						{
																							"key": "offset"
																						},
																						{
																							"key": "size"
																						}
																					]
																				}
																			},
																			"status": "OK",
																			"code": 200,
																			"_postman_previewlanguage": "json",
																			"header": [
																				{
																					"key": "Content-Type",
																					"value": "application/json"
																				}
																			],
																			"cookie": [],
																			"body": "[\n  {\n    \"tokenId\": \"<string>\",\n    \"streamId\": \"<string>\",\n    \"expireDate\": \"<long>\",\n    \"type\": \"<string>\",\n    \"roomId\": \"<string>\"\n  },\n  {\n    \"tokenId\": \"<string>\",\n    \"streamId\": \"<string>\",\n    \"expireDate\": \"<long>\",\n    \"type\": \"<string>\",\n    \"roomId\": \"<string>\"\n  }\n]"
																		}
																	]
																}
															]
														}
													]
												}
											]
										},
										{
											"name": " Removes all tokens related with requested stream",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id/tokens",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id",
														"tokens"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:id/tokens",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":id",
																"tokens"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								},
								{
									"name": "Get broadcast object",
									"request": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "Return the broadcast object",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										},
										{
											"name": "Broadcast object not found",
											"originalRequest": {
												"method": "GET",
												"header": [],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "Not Found",
											"code": 404,
											"_postman_previewlanguage": "text",
											"header": [],
											"cookie": [],
											"body": ""
										}
									]
								},
								{
									"name": "Updates the Broadcast objects fields if it's not null. The updated fields are as follows: name, description, userName, password, IP address, streamUrl of the broadcast. It also updates the social endpoints",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"streamId\": \"<string>\",\n  \"status\": \"created\",\n  \"playListStatus\": \"finished\",\n  \"type\": \"streamSource\",\n  \"publishType\": \"RTMP\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publish\": \"<boolean>\",\n  \"date\": \"<long>\",\n  \"plannedStartDate\": \"<long>\",\n  \"plannedEndDate\": \"<long>\",\n  \"duration\": \"<long>\",\n  \"endPointList\": [\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    }\n  ],\n  \"playListItemList\": [\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"publicStream\": \"<boolean>\",\n  \"is360\": \"<boolean>\",\n  \"listenerHookURL\": \"<string>\",\n  \"category\": \"<string>\",\n  \"ipAddr\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"quality\": \"<string>\",\n  \"speed\": \"<double>\",\n  \"streamUrl\": \"<string>\",\n  \"originAdress\": \"<string>\",\n  \"mp4Enabled\": \"<integer>\",\n  \"webMEnabled\": \"<integer>\",\n  \"expireDurationMS\": \"<integer>\",\n  \"rtmpURL\": \"<string>\",\n  \"zombi\": \"<boolean>\",\n  \"pendingPacketSize\": \"<integer>\",\n  \"hlsViewerCount\": \"<integer>\",\n  \"dashViewerCount\": \"<integer>\",\n  \"webRTCViewerCount\": \"<integer>\",\n  \"rtmpViewerCount\": \"<integer>\",\n  \"startTime\": \"<long>\",\n  \"receivedBytes\": \"<long>\",\n  \"bitrate\": \"<long>\",\n  \"userAgent\": \"<string>\",\n  \"latitude\": \"<string>\",\n  \"longitude\": \"<string>\",\n  \"altitude\": \"<string>\",\n  \"mainTrackStreamId\": \"<string>\",\n  \"subTrackStreamIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteStartTimeMs\": \"<long>\",\n  \"webRTCViewerLimit\": \"<integer>\",\n  \"hlsViewerLimit\": \"<integer>\",\n  \"dashViewerLimit\": \"<integer>\",\n  \"subFolder\": \"<string>\",\n  \"currentPlayIndex\": \"<integer>\",\n  \"metaData\": \"<string>\",\n  \"playlistLoopEnabled\": \"<boolean>\",\n  \"updateTime\": \"<long>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "If it's updated, success field is true. If it's not updated, success  field if false.",
											"originalRequest": {
												"method": "PUT",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"streamId\": \"<string>\",\n  \"status\": \"created\",\n  \"playListStatus\": \"finished\",\n  \"type\": \"streamSource\",\n  \"publishType\": \"RTMP\",\n  \"name\": \"<string>\",\n  \"description\": \"<string>\",\n  \"publish\": \"<boolean>\",\n  \"date\": \"<long>\",\n  \"plannedStartDate\": \"<long>\",\n  \"plannedEndDate\": \"<long>\",\n  \"duration\": \"<long>\",\n  \"endPointList\": [\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    },\n    {\n      \"status\": \"<string>\",\n      \"type\": \"<string>\",\n      \"rtmpUrl\": \"<string>\",\n      \"endpointServiceId\": \"<string>\"\n    }\n  ],\n  \"playListItemList\": [\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    },\n    {\n      \"streamUrl\": \"<string>\",\n      \"type\": \"<string>\"\n    }\n  ],\n  \"publicStream\": \"<boolean>\",\n  \"is360\": \"<boolean>\",\n  \"listenerHookURL\": \"<string>\",\n  \"category\": \"<string>\",\n  \"ipAddr\": \"<string>\",\n  \"username\": \"<string>\",\n  \"password\": \"<string>\",\n  \"quality\": \"<string>\",\n  \"speed\": \"<double>\",\n  \"streamUrl\": \"<string>\",\n  \"originAdress\": \"<string>\",\n  \"mp4Enabled\": \"<integer>\",\n  \"webMEnabled\": \"<integer>\",\n  \"expireDurationMS\": \"<integer>\",\n  \"rtmpURL\": \"<string>\",\n  \"zombi\": \"<boolean>\",\n  \"pendingPacketSize\": \"<integer>\",\n  \"hlsViewerCount\": \"<integer>\",\n  \"dashViewerCount\": \"<integer>\",\n  \"webRTCViewerCount\": \"<integer>\",\n  \"rtmpViewerCount\": \"<integer>\",\n  \"startTime\": \"<long>\",\n  \"receivedBytes\": \"<long>\",\n  \"bitrate\": \"<long>\",\n  \"userAgent\": \"<string>\",\n  \"latitude\": \"<string>\",\n  \"longitude\": \"<string>\",\n  \"altitude\": \"<string>\",\n  \"mainTrackStreamId\": \"<string>\",\n  \"subTrackStreamIds\": [\n    \"<string>\",\n    \"<string>\"\n  ],\n  \"absoluteStartTimeMs\": \"<long>\",\n  \"webRTCViewerLimit\": \"<integer>\",\n  \"hlsViewerLimit\": \"<integer>\",\n  \"dashViewerLimit\": \"<integer>\",\n  \"subFolder\": \"<string>\",\n  \"currentPlayIndex\": \"<integer>\",\n  \"metaData\": \"<string>\",\n  \"playlistLoopEnabled\": \"<boolean>\",\n  \"updateTime\": \"<long>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Delete broadcast from data store and stop if it's broadcasting",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/broadcasts/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"broadcasts",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "If it's deleted, success is true. If it's not deleted, success if false.",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{streamId}",
							"item": [
								{
									"name": "ip-camera-error",
									"item": [
										{
											"name": "Get IP Camera Error after connection failure. If returns true, it means there is an error. If returns false, there is no error",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/broadcasts/:streamId/ip-camera-error",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"broadcasts",
														":streamId",
														"ip-camera-error"
													],
													"variable": [
														{
															"key": "streamId",
															"value": ""
														}
													]
												},
												"description": "Notes here"
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/broadcasts/:streamId/ip-camera-error",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"broadcasts",
																":streamId",
																"ip-camera-error"
															],
															"variable": [
																{
																	"key": "streamId"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "{stream_id}",
							"item": [
								{
									"name": "webrtc-client-stats",
									"item": [
										{
											"name": "{offset}",
											"item": [
												{
													"name": "{size}",
													"item": [
														{
															"name": "Get WebRTC Client Statistics such as : Audio bitrate, Video bitrate, Target bitrate, Video Sent Period etc.",
															"request": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/broadcasts/:stream_id/webrtc-client-stats/:offset/:size",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"broadcasts",
																		":stream_id",
																		"webrtc-client-stats",
																		":offset",
																		":size"
																	],
																	"variable": [
																		{
																			"key": "stream_id",
																			"value": ""
																		},
																		{
																			"key": "offset",
																			"value": ""
																		},
																		{
																			"key": "size",
																			"value": ""
																		}
																	]
																}
															},
															"response": [
																{
																	"name": "successful operation",
																	"originalRequest": {
																		"method": "GET",
																		"header": [
																			{
																				"key": "Accept",
																				"value": "application/json"
																			}
																		],
																		"url": {
																			"raw": "{{baseUrl}}/v2/broadcasts/:stream_id/webrtc-client-stats/:offset/:size",
																			"host": [
																				"{{baseUrl}}"
																			],
																			"path": [
																				"v2",
																				"broadcasts",
																				":stream_id",
																				"webrtc-client-stats",
																				":offset",
																				":size"
																			],
																			"variable": [
																				{
																					"key": "stream_id"
																				},
																				{
																					"key": "offset"
																				},
																				{
																					"key": "size"
																				}
																			]
																		}
																	},
																	"status": "OK",
																	"code": 200,
																	"_postman_previewlanguage": "json",
																	"header": [
																		{
																			"key": "Content-Type",
																			"value": "application/json"
																		}
																	],
																	"cookie": [],
																	"body": "[\n  {\n    \"measuredBitrate\": \"<integer>\",\n    \"sendBitrate\": \"<integer>\",\n    \"videoFrameSendPeriod\": \"<double>\",\n    \"audioFrameSendPeriod\": \"<double>\",\n    \"clientId\": \"<integer>\",\n    \"videoPacketCount\": \"<long>\",\n    \"audioPacketCount\": \"<long>\",\n    \"videoSentStats\": {\n      \"videoFirCount\": \"<long>\",\n      \"videoPliCount\": \"<long>\",\n      \"videoNackCount\": \"<long>\",\n      \"videoPacketsSent\": \"<long>\",\n      \"videoFramesEncoded\": \"<long>\",\n      \"videoBytesSent\": \"<integer>\",\n      \"videoPacketsSentPerSecond\": \"<long>\",\n      \"videoBytesSentPerSecond\": \"<integer>\",\n      \"videoFramesEncodedPerSecond\": \"<long>\",\n      \"timeMs\": \"<long>\"\n    },\n    \"audioSentStats\": {\n      \"audioPacketsSent\": \"<long>\",\n      \"audioBytesSent\": \"<integer>\",\n      \"audioPacketsPerSecond\": \"<long>\",\n      \"audioBytesSentPerSecond\": \"<integer>\",\n      \"timeMs\": \"<long>\"\n    },\n    \"clientInfo\": \"<string>\",\n    \"clientIp\": \"<string>\"\n  },\n  {\n    \"measuredBitrate\": \"<integer>\",\n    \"sendBitrate\": \"<integer>\",\n    \"videoFrameSendPeriod\": \"<double>\",\n    \"audioFrameSendPeriod\": \"<double>\",\n    \"clientId\": \"<integer>\",\n    \"videoPacketCount\": \"<long>\",\n    \"audioPacketCount\": \"<long>\",\n    \"videoSentStats\": {\n      \"videoFirCount\": \"<long>\",\n      \"videoPliCount\": \"<long>\",\n      \"videoNackCount\": \"<long>\",\n      \"videoPacketsSent\": \"<long>\",\n      \"videoFramesEncoded\": \"<long>\",\n      \"videoBytesSent\": \"<integer>\",\n      \"videoPacketsSentPerSecond\": \"<long>\",\n      \"videoBytesSentPerSecond\": \"<integer>\",\n      \"videoFramesEncodedPerSecond\": \"<long>\",\n      \"timeMs\": \"<long>\"\n    },\n    \"audioSentStats\": {\n      \"audioPacketsSent\": \"<long>\",\n      \"audioBytesSent\": \"<integer>\",\n      \"audioPacketsPerSecond\": \"<long>\",\n      \"audioBytesSentPerSecond\": \"<integer>\",\n      \"timeMs\": \"<long>\"\n    },\n    \"clientInfo\": \"<string>\",\n    \"clientIp\": \"<string>\"\n  }\n]"
																}
															]
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "cluster-mode-status",
					"item": [
						{
							"name": "Returns the server mode. If it is in the cluster mode, result will be true.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/cluster-mode-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"cluster-mode-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/cluster-mode-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cluster-mode-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "cluster",
					"item": [
						{
							"name": "node-count",
							"item": [
								{
									"name": "get Node Count",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "*/*"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/cluster/node-count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cluster",
												"node-count"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "*/*"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cluster/node-count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cluster",
														"node-count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "text",
											"header": [
												{
													"key": "Content-Type",
													"value": "*/*"
												}
											],
											"cookie": [],
											"body": "{\n  \"number\": \"<long>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "node",
							"item": [
								{
									"name": "{id}",
									"item": [
										{
											"name": "delete Node",
											"request": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/cluster/node/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"cluster",
														"node",
														":id"
													],
													"variable": [
														{
															"key": "id",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "DELETE",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cluster/node/:id",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cluster",
																"node",
																":id"
															],
															"variable": [
																{
																	"key": "id"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "nodes",
							"item": [
								{
									"name": "{offset}",
									"item": [
										{
											"name": "{size}",
											"item": [
												{
													"name": "get Node List",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/cluster/nodes/:offset/:size",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"cluster",
																"nodes",
																":offset",
																":size"
															],
															"variable": [
																{
																	"key": "offset",
																	"value": ""
																},
																{
																	"key": "size",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/cluster/nodes/:offset/:size",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"cluster",
																		"nodes",
																		":offset",
																		":size"
																	],
																	"variable": [
																		{
																			"key": "offset"
																		},
																		{
																			"key": "size"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"id\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"lastUpdateTime\": \"<long>\",\n    \"memory\": \"<string>\",\n    \"cpu\": \"<string>\",\n    \"status\": \"<string>\"\n  },\n  {\n    \"id\": \"<string>\",\n    \"ip\": \"<string>\",\n    \"lastUpdateTime\": \"<long>\",\n    \"memory\": \"<string>\",\n    \"cpu\": \"<string>\",\n    \"status\": \"<string>\"\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "cpu-status",
					"item": [
						{
							"name": "Returns system cpu load, process cpu load and process cpu time.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/cpu-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"cpu-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/cpu-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"cpu-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "enterprise-edition",
					"item": [
						{
							"name": "Returns true if the server is enterprise edition.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/enterprise-edition",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"enterprise-edition"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/enterprise-edition",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"enterprise-edition"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "file-system-status",
					"item": [
						{
							"name": "Gets system file status. Returns usable space, total space, available space and in use space.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/file-system-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"file-system-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/file-system-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"file-system-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "first-login-status",
					"item": [
						{
							"name": "Checks first login status. If server being logged in first time, it returns true, otherwise false.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/first-login-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"first-login-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/first-login-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"first-login-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "gpu-status",
					"item": [
						{
							"name": "Gets GPU information. Returns whether you have GPU or not. If yes, information of the gpu and the number of total gpus.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/gpu-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"gpu-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/gpu-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"gpu-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "heap-dump",
					"item": [
						{
							"name": "Returns heap dump.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/octet-stream"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/heap-dump",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"heap-dump"
									]
								}
							},
							"response": [
								{
									"name": "Returns the heap dump",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/octet-stream"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/heap-dump",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"heap-dump"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "text",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/octet-stream"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "jvm-memory-status",
					"item": [
						{
							"name": "Returns JVM memory informations. Max, total, free, in-use and available processors are returned.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/jvm-memory-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"jvm-memory-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/jvm-memory-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"jvm-memory-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "last-licence-status",
					"item": [
						{
							"name": "Returns the last checked license status. Includes license ID, owner, start date, end date, type and license count.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/last-licence-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"last-licence-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/last-licence-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"last-licence-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "licence-status",
					"item": [
						{
							"name": "Returns license status. Includes license ID, status, owner, start date, end date, type and license count.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/licence-status?key=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"licence-status"
									],
									"query": [
										{
											"key": "key",
											"value": "",
											"description": "(Required) License key"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/licence-status?key=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"licence-status"
											],
											"query": [
												{
													"key": "key",
													"value": "",
													"description": "(Required) License key"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "live-clients-size",
					"item": [
						{
							"name": "Returns total number of live streams and total number of connections.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/live-clients-size",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"live-clients-size"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/live-clients-size",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"live-clients-size"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "liveness",
					"item": [
						{
							"name": "Returns the hostname to check liveness with HTTP type healthcheck.",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/v2/liveness",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"liveness"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/liveness",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"liveness"
											]
										}
									},
									"status": "Internal Server Error",
									"code": 500,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "log-file",
					"item": [
						{
							"name": "{offsetSize}",
							"item": [
								{
									"name": "{charSize}",
									"item": [
										{
											"name": "Gets log file. Char size of the log, offset or log type can be specified.",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/log-file/:offsetSize/:charSize?logType=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"log-file",
														":offsetSize",
														":charSize"
													],
													"query": [
														{
															"key": "logType",
															"value": "",
															"description": "(Required) Log type. ERROR can be used to get only error logs"
														}
													],
													"variable": [
														{
															"key": "offsetSize",
															"value": ""
														},
														{
															"key": "charSize",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/log-file/:offsetSize/:charSize?logType=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"log-file",
																":offsetSize",
																":charSize"
															],
															"query": [
																{
																	"key": "logType",
																	"value": "",
																	"description": "(Required) Log type. ERROR can be used to get only error logs"
																}
															],
															"variable": [
																{
																	"key": "offsetSize"
																},
																{
																	"key": "charSize"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "server-settings",
					"item": [
						{
							"name": "Returns the server settings. From log level to measurement period of cpu, license key of the server host address,ssl configuration and many more settings are returned at once.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/server-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"server-settings"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/server-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"server-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "Changes server settings. Sets Server Name, license key, market build status and node group.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"allowedDashboardCIDR\": \"<string>\",\n  \"hostAddress\": \"<string>\",\n  \"serverName\": \"<string>\",\n  \"licenceKey\": \"<string>\",\n  \"buildForMarket\": \"<boolean>\",\n  \"marketplace\": \"<string>\",\n  \"logLevel\": \"<string>\",\n  \"nativeLogLevel\": \"<string>\",\n  \"heartbeatEnabled\": \"<boolean>\",\n  \"useGlobalIp\": \"<boolean>\",\n  \"proxyAddress\": \"<string>\",\n  \"nodeGroup\": \"<string>\",\n  \"cpuMeasurementPeriodMs\": \"<integer>\",\n  \"cpuMeasurementWindowSize\": \"<integer>\",\n  \"defaultHttpPort\": \"<integer>\",\n  \"jwtServerControlEnabled\": \"<boolean>\",\n  \"jwtServerSecretKey\": \"<string>\",\n  \"jwksURL\": \"<string>\",\n  \"originServerPort\": \"<integer>\",\n  \"srtPort\": \"<integer>\",\n  \"sslEnabled\": \"<boolean>\",\n  \"rtmpPort\": \"<integer>\",\n  \"serverStatusWebHookURL\": \"<string>\",\n  \"hostAddressFromEnvironment\": \"<string>\",\n  \"webRTCLogLevel\": \"LS_WARNING\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/server-settings",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"server-settings"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"allowedDashboardCIDR\": \"<string>\",\n  \"hostAddress\": \"<string>\",\n  \"serverName\": \"<string>\",\n  \"licenceKey\": \"<string>\",\n  \"buildForMarket\": \"<boolean>\",\n  \"marketplace\": \"<string>\",\n  \"logLevel\": \"<string>\",\n  \"nativeLogLevel\": \"<string>\",\n  \"heartbeatEnabled\": \"<boolean>\",\n  \"useGlobalIp\": \"<boolean>\",\n  \"proxyAddress\": \"<string>\",\n  \"nodeGroup\": \"<string>\",\n  \"cpuMeasurementPeriodMs\": \"<integer>\",\n  \"cpuMeasurementWindowSize\": \"<integer>\",\n  \"defaultHttpPort\": \"<integer>\",\n  \"jwtServerControlEnabled\": \"<boolean>\",\n  \"jwtServerSecretKey\": \"<string>\",\n  \"jwksURL\": \"<string>\",\n  \"originServerPort\": \"<integer>\",\n  \"srtPort\": \"<integer>\",\n  \"sslEnabled\": \"<boolean>\",\n  \"rtmpPort\": \"<integer>\",\n  \"serverStatusWebHookURL\": \"<string>\",\n  \"hostAddressFromEnvironment\": \"<string>\",\n  \"webRTCLogLevel\": \"LS_WARNING\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/server-settings",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"server-settings"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "server-time",
					"item": [
						{
							"name": "Gets server time. Returns server uptime and start time in milliseconds in JSON.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/server-time",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"server-time"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/server-time",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"server-time"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "shutdown-proper-status",
					"item": [
						{
							"name": "Checks whether application or applications have shutdown properly or not.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/shutdown-proper-status?appNames=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"shutdown-proper-status"
									],
									"query": [
										{
											"key": "appNames",
											"value": "",
											"description": "(Required) Application name"
										}
									]
								}
							},
							"response": [
								{
									"name": "Returns the shutdown status of entered applications.",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/shutdown-proper-status?appNames=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"shutdown-proper-status"
											],
											"query": [
												{
													"key": "appNames",
													"value": "",
													"description": "(Required) Application name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								},
								{
									"name": "Either entered in wrong format or typed incorrectly application names",
									"originalRequest": {
										"method": "GET",
										"header": [],
										"url": {
											"raw": "{{baseUrl}}/v2/shutdown-proper-status?appNames=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"shutdown-proper-status"
											],
											"query": [
												{
													"key": "appNames",
													"value": "",
													"description": "(Required) Application name"
												}
											]
										}
									},
									"status": "Bad Request",
									"code": 400,
									"_postman_previewlanguage": "text",
									"header": [],
									"cookie": [],
									"body": ""
								}
							]
						}
					]
				},
				{
					"name": "shutdown-properly",
					"item": [
						{
							"name": "Set application or applications shutdown property to true",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/shutdown-properly?appNames=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"shutdown-properly"
									],
									"query": [
										{
											"key": "appNames",
											"value": "",
											"description": "(Required) Application name"
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/shutdown-properly?appNames=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"shutdown-properly"
											],
											"query": [
												{
													"key": "appNames",
													"value": "",
													"description": "(Required) Application name"
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "ssl-settings",
					"item": [
						{
							"name": "Changes ssl settings. Sets ssl configuration type. After this method is called, server will be restarted.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/ssl-settings?domain=<string>&type=<string>",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"ssl-settings"
									],
									"query": [
										{
											"key": "domain",
											"value": "",
											"description": "(Required) SSL settings"
										},
										{
											"key": "type",
											"value": ""
										}
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/ssl-settings?domain=<string>&type=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"ssl-settings"
											],
											"query": [
												{
													"key": "domain",
													"value": "",
													"description": "(Required) SSL settings"
												},
												{
													"key": "type",
													"value": ""
												}
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "support",
					"item": [
						{
							"name": "request",
							"item": [
								{
									"name": "send Support Request",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/support/request",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"support",
												"request"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/support/request",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"support",
														"request"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				},
				{
					"name": "system-memory-status",
					"item": [
						{
							"name": "Gets system memory status. Returns Virtual, total physical, available physical, currently in use, total swap space, available swap space and in use swap space. ",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/system-memory-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"system-memory-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/system-memory-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"system-memory-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "system-resources",
					"item": [
						{
							"name": "Gets system resource information. Returns number of total live streams, cpu usage, system information, jvm information, file system information, license status, gpu status etc. Basically returns most of the information in one package.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/system-resources",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"system-resources"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/system-resources",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"system-resources"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "system-status",
					"item": [
						{
							"name": "Returns system information which includes many information such as JVM memory, OS information, Available File Space, Physical memory informations in detail.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/system-status",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"system-status"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/system-status",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"system-status"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "thread-dump",
					"item": [
						{
							"name": "Gets thread dump in json format. Includes very detailed information such as thread name, thread id, blocked time of thread, thread state and many more information are returned.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/thread-dump",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"thread-dump"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/thread-dump",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"thread-dump"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "threads",
					"item": [
						{
							"name": "Returns processor's thread information. Includes number of dead locked threads, thread count, and thread peek count.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/threads",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"threads"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/threads",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"threads"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "user-list",
					"item": [
						{
							"name": "Returns user list in the server management panel",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/user-list",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"user-list"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/user-list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"user-list"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						}
					]
				},
				{
					"name": "users",
					"item": [
						{
							"name": "authenticate",
							"item": [
								{
									"name": "Authenticates user with given username and password. Requires user object to authenticate.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/users/authenticate",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"users",
												"authenticate"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/users/authenticate",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"users",
														"authenticate"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "initial",
							"item": [
								{
									"name": "Creates initial user. This is a one time scenario when initial user creation required and shouldn't be used otherwise. User object is required and can't be null",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/users/initial",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"users",
												"initial"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/users/initial",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"users",
														"initial"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "password",
							"item": [
								{
									"name": "Changes the given user's password.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/users/password",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"users",
												"password"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/users/password",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"users",
														"password"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{usermail}",
							"item": [
								{
									"name": "blocked",
									"item": [
										{
											"name": "Returns if user is blocked. User is blocked for a specific time if there are login attempts",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/users/:usermail/blocked",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"users",
														":usermail",
														"blocked"
													],
													"variable": [
														{
															"key": "usermail",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/users/:usermail/blocked",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"users",
																":usermail",
																"blocked"
															],
															"variable": [
																{
																	"key": "usermail"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "{username}",
							"item": [
								{
									"name": "Delete the user from the server management panel's user list",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/users/:username",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"users",
												":username"
											],
											"variable": [
												{
													"key": "username",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/users/:username",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"users",
														":username"
													],
													"variable": [
														{
															"key": "username"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "[]"
										}
									]
								}
							]
						},
						{
							"name": "Creates a new user. If user object is null or if user is not authenticated, new user won't be created.",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"users"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						},
						{
							"name": "Edit the user in the server management panel's user list. It can change password or user type(admin, read only) ",
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json"
									},
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
									"options": {
										"raw": {
											"headerFamily": "json",
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/v2/users",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"users"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "PUT",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"email\": \"<string>\",\n  \"userType\": \"ADMIN\",\n  \"scope\": \"<string>\",\n  \"fullName\": \"<string>\",\n  \"firstName\": \"<string>\",\n  \"lastName\": \"<string>\",\n  \"picture\": \"<string>\"\n}",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/users",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"users"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "[]"
								}
							]
						}
					]
				},
				{
					"name": "version",
					"item": [
						{
							"name": "Returns the version of Ant Media Server.",
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/v2/version",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"v2",
										"version"
									]
								}
							},
							"response": [
								{
									"name": "successful operation",
									"originalRequest": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/version",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"version"
											]
										}
									},
									"status": "OK",
									"code": 200,
									"_postman_previewlanguage": "json",
									"header": [
										{
											"key": "Content-Type",
											"value": "application/json"
										}
									],
									"cookie": [],
									"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
								}
							]
						}
					]
				},
				{
					"name": "vods",
					"item": [
						{
							"name": "bulk",
							"item": [
								{
									"name": "Delete bulk VoD Files based on Vod Id",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Content-Type",
												"value": "application/json"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
											"options": {
												"raw": {
													"headerFamily": "json",
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{baseUrl}}/v2/vods/bulk",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"vods",
												"bulk"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Content-Type",
														"value": "application/json"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "[\n  \"<string>\",\n  \"<string>\"\n]",
													"options": {
														"raw": {
															"headerFamily": "json",
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{baseUrl}}/v2/vods/bulk",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														"bulk"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "count",
							"item": [
								{
									"name": "{search}",
									"item": [
										{
											"name": "Get the partial number of VoDs depending on the searched items",
											"request": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/vods/count/:search",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														"count",
														":search"
													],
													"variable": [
														{
															"key": "search",
															"value": ""
														}
													]
												}
											},
											"response": [
												{
													"name": "successful operation",
													"originalRequest": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/vods/count/:search",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"vods",
																"count",
																":search"
															],
															"variable": [
																{
																	"key": "search"
																}
															]
														}
													},
													"status": "OK",
													"code": 200,
													"_postman_previewlanguage": "json",
													"header": [
														{
															"key": "Content-Type",
															"value": "application/json"
														}
													],
													"cookie": [],
													"body": ""
												}
											]
										}
									]
								},
								{
									"name": "Get the total number of VoDs",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/vods/count",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"vods",
												"count"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/vods/count",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														"count"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": ""
										}
									]
								}
							]
						},
						{
							"name": "create",
							"item": [
								{
									"name": "Upload external VoD file to Ant Media Server",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Content-Type",
												"value": "multipart/form-data"
											},
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"body": {
											"mode": "formdata",
											"formdata": []
										},
										"url": {
											"raw": "{{baseUrl}}/v2/vods/create?name=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"vods",
												"create"
											],
											"query": [
												{
													"key": "name",
													"value": "",
													"description": "(Required) the name of the VoD File"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Content-Type",
														"value": "multipart/form-data"
													},
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"body": {
													"mode": "formdata",
													"formdata": []
												},
												"url": {
													"raw": "{{baseUrl}}/v2/vods/create?name=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														"create"
													],
													"query": [
														{
															"key": "name",
															"value": "",
															"description": "(Required) the name of the VoD File"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "directory",
							"item": [
								{
									"name": "Import VoD files from a directory and make it streamable.",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/vods/directory?directory=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"vods",
												"directory"
											],
											"query": [
												{
													"key": "directory",
													"value": "",
													"description": "the full path of the directory that VoD files will be imported to datastore and linked to the streams"
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/vods/directory?directory=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														"directory"
													],
													"query": [
														{
															"key": "directory",
															"value": "",
															"description": "the full path of the directory that VoD files will be imported to datastore and linked to the streams"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								},
								{
									"name": "Unlinks VoD path from streams directory and delete the database record. It does not delete the files. It only unlinks folder and delete database records",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/vods/directory?directory=<string>",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"vods",
												"directory"
											],
											"query": [
												{
													"key": "directory",
													"value": "",
													"description": "the full path of the directory that imported VoD files will be deleted from database. "
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/vods/directory?directory=<string>",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														"directory"
													],
													"query": [
														{
															"key": "directory",
															"value": "",
															"description": "the full path of the directory that imported VoD files will be deleted from database. "
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "import-to-stalker",
							"item": [
								{
									"name": "Import VoDs to Stalker Portal",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/vods/import-to-stalker",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"vods",
												"import-to-stalker"
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/vods/import-to-stalker",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														"import-to-stalker"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "list",
							"item": [
								{
									"name": "{offset}",
									"item": [
										{
											"name": "{size}",
											"item": [
												{
													"name": " Get the VoD list from database. It returns 50 items at max. You can use offset value to get result page by page ",
													"request": {
														"method": "GET",
														"header": [
															{
																"key": "Accept",
																"value": "application/json"
															}
														],
														"url": {
															"raw": "{{baseUrl}}/v2/vods/list/:offset/:size?sort_by=<string>&order_by=<string>&streamId=<string>&search=<string>",
															"host": [
																"{{baseUrl}}"
															],
															"path": [
																"v2",
																"vods",
																"list",
																":offset",
																":size"
															],
															"query": [
																{
																	"key": "sort_by",
																	"value": "",
																	"description": "Field to sort. Possible values are \"name\", \"date\""
																},
																{
																	"key": "order_by",
																	"value": "",
																	"description": "\"asc\" for Ascending, \"desc\" Descening order"
																},
																{
																	"key": "streamId",
																	"value": "",
																	"description": "Id of the stream to filter the results by stream id"
																},
																{
																	"key": "search",
																	"value": "",
																	"description": "Search string"
																}
															],
															"variable": [
																{
																	"key": "offset",
																	"value": ""
																},
																{
																	"key": "size",
																	"value": ""
																}
															]
														}
													},
													"response": [
														{
															"name": "successful operation",
															"originalRequest": {
																"method": "GET",
																"header": [
																	{
																		"key": "Accept",
																		"value": "application/json"
																	}
																],
																"url": {
																	"raw": "{{baseUrl}}/v2/vods/list/:offset/:size?sort_by=<string>&order_by=<string>&streamId=<string>&search=<string>",
																	"host": [
																		"{{baseUrl}}"
																	],
																	"path": [
																		"v2",
																		"vods",
																		"list",
																		":offset",
																		":size"
																	],
																	"query": [
																		{
																			"key": "sort_by",
																			"value": "",
																			"description": "Field to sort. Possible values are \"name\", \"date\""
																		},
																		{
																			"key": "order_by",
																			"value": "",
																			"description": "\"asc\" for Ascending, \"desc\" Descening order"
																		},
																		{
																			"key": "streamId",
																			"value": "",
																			"description": "Id of the stream to filter the results by stream id"
																		},
																		{
																			"key": "search",
																			"value": "",
																			"description": "Search string"
																		}
																	],
																	"variable": [
																		{
																			"key": "offset"
																		},
																		{
																			"key": "size"
																		}
																	]
																}
															},
															"status": "OK",
															"code": 200,
															"_postman_previewlanguage": "json",
															"header": [
																{
																	"key": "Content-Type",
																	"value": "application/json"
																}
															],
															"cookie": [],
															"body": "[\n  {\n    \"streamName\": \"<string>\",\n    \"vodName\": \"<string>\",\n    \"streamId\": \"<string>\",\n    \"creationDate\": \"<long>\",\n    \"startTime\": \"<long>\",\n    \"duration\": \"<long>\",\n    \"fileSize\": \"<long>\",\n    \"filePath\": \"<string>\",\n    \"vodId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"previewFilePath\": \"<string>\"\n  },\n  {\n    \"streamName\": \"<string>\",\n    \"vodName\": \"<string>\",\n    \"streamId\": \"<string>\",\n    \"creationDate\": \"<long>\",\n    \"startTime\": \"<long>\",\n    \"duration\": \"<long>\",\n    \"fileSize\": \"<long>\",\n    \"filePath\": \"<string>\",\n    \"vodId\": \"<string>\",\n    \"type\": \"<string>\",\n    \"previewFilePath\": \"<string>\"\n  }\n]"
														}
													]
												}
											]
										}
									]
								}
							]
						},
						{
							"name": "synch-user-vod-list",
							"item": [
								{
									"name": "Deprecated. Use import VoDs. Synchronize VoD Folder and add them to VoD database if any file exist and create symbolic links to that folder",
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/vods/synch-user-vod-list",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"vods",
												"synch-user-vod-list"
											]
										},
										"description": "Notes here"
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "POST",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/vods/synch-user-vod-list",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														"synch-user-vod-list"
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						},
						{
							"name": "{id}",
							"item": [
								{
									"name": "VoD file from database",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/vods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"vods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "GET",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/vods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"streamName\": \"<string>\",\n  \"vodName\": \"<string>\",\n  \"streamId\": \"<string>\",\n  \"creationDate\": \"<long>\",\n  \"startTime\": \"<long>\",\n  \"duration\": \"<long>\",\n  \"fileSize\": \"<long>\",\n  \"filePath\": \"<string>\",\n  \"vodId\": \"<string>\",\n  \"type\": \"<string>\",\n  \"previewFilePath\": \"<string>\"\n}"
										}
									]
								},
								{
									"name": "Delete specific VoD File",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Accept",
												"value": "application/json"
											}
										],
										"url": {
											"raw": "{{baseUrl}}/v2/vods/:id",
											"host": [
												"{{baseUrl}}"
											],
											"path": [
												"v2",
												"vods",
												":id"
											],
											"variable": [
												{
													"key": "id",
													"value": ""
												}
											]
										}
									},
									"response": [
										{
											"name": "successful operation",
											"originalRequest": {
												"method": "DELETE",
												"header": [
													{
														"key": "Accept",
														"value": "application/json"
													}
												],
												"url": {
													"raw": "{{baseUrl}}/v2/vods/:id",
													"host": [
														"{{baseUrl}}"
													],
													"path": [
														"v2",
														"vods",
														":id"
													],
													"variable": [
														{
															"key": "id"
														}
													]
												}
											},
											"status": "OK",
											"code": 200,
											"_postman_previewlanguage": "json",
											"header": [
												{
													"key": "Content-Type",
													"value": "application/json"
												}
											],
											"cookie": [],
											"body": "{\n  \"success\": \"<boolean>\",\n  \"message\": \"<string>\",\n  \"dataId\": \"<string>\",\n  \"errorId\": \"<integer>\"\n}"
										}
									]
								}
							]
						}
					]
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "//test.antmedia.io:5443/Sandbox/rest/"
		}
	]
}